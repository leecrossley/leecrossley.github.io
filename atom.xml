<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[iLee]]></title>
  <subtitle><![CDATA[I write code that sounds awesome and music that's bug free]]></subtitle>
  <link href="http://ilee.co.uk/atom.xml" rel="self"/>
  <link href="http://ilee.co.uk"/>
  <updated>2013-10-29T16:08:17.986Z</updated>
  <id>http://ilee.co.uk/</id>
  <author>
    <name><![CDATA[Lee Crossley]]></name>
    <email><![CDATA[leee@hotmail.co.uk]]></email>
  </author>
  <entry>
    <title type="html"><![CDATA[Yet Another Hackathon Victory]]></title>
    <link href="http://ilee.co.uk/yet-another-hackathon-victory/"/>
    <id>http://ilee.co.uk/yet-another-hackathon-victory/</id>
    <published>2013-10-29T11:35:50.000Z</published>
    <updated>2013-10-29T16:08:11.000Z</updated>
    <content type="html"><![CDATA[<h2>Hack Manchester</h2>
<p><a href="http://www.hackmanchester.com/" target="_blank">Hack Manchester</a> is the premier 24-hour coding competition based in Manchester, run by <a href="https://twitter.com/ruby_gem" target="_blank">@ruby_gem</a> and <a href="https://twitter.com/theallseeingpie" target="_blank">@theallseeingpie</a> (with help from others). This year (as before) it was held at the <a href="http://www.mosi.org.uk/" target="_blank">Museum of Science and Industry</a> on the 26th and 27th of October 2013 as part of <a href="http://www.manchestersciencefestival.com/" target="_blank">Manchester Science Festival</a>.</p>
<h2>We won again!</h2>
<p>I blogged a few weeks ago (<a href="/road-to-hack-manchester">the road to Hack Manchester</a>) about winning back in 2012 and what it takes to win based on the lessons we learnt. Looks like it was good advice because <strong>WE&#39;VE GONE AND DONE IT AGAIN!</strong> Amazing job from my team mates <a href="https://twitter.com/edhiley" target="_blank">@edhiley</a> and <a href="https://twitter.com/ryansroberts" target="_blank">@ryansroberts</a>. This gives me a crazy record of 3 hack events and 3 wins.</p>
<h2>The challenge</h2>
<p>The challenge (sponsored by <a href="https://twitter.com/WebAppUK" target="_blank">Web Applications UK</a>) was to write a game. More specifically, to write a browser-based game with a travel theme.</p>
<p>For anyone who doesn‘t know what a browser is (there seem to be quite a few), it’s a computer program with a graphical user interface for displaying HTML files. So, we came up with a travel themed game (written in HTML / CSS / JavaScript for both the <a href="https://github.com/leecrossley/appsassin/tree/master/client/www" target="_blank">mobile clients</a> and server). Nothing to dispute there.</p>
<p>Anyway, here is the more detailed brief we were given:</p>
<blockquote><p>We&#39;re looking for the most entertaining and damn right addictive game you can muster. Have fun with it and create something great. The most original idea, with the best use of the travel theme and some impressive features thrown in will bag the prize…</p>
<footer><strong>- Web Applications UK</strong></footer></blockquote>


<h2>“Appsassin”</h2>
<p>Our concept was to assassinate other players with your mobile phone (we supported Android and iOS, but it also probably works on Windows Phone and BlackBerry, with it being browser based), hence the comical name “appsassin” and url “appsass.in” :)</p>
<h3>The game</h3>
<h4>Signup</h4>
<ul>
<li>You signup by entering your mobile number and taking / uploading a picture of your face</li>
<li>A game is set up on the game server by a moderator</li>
<li>Registered players can enter a game if they are in the local vicinity</li>
</ul>
<h4>Playing</h4>
<ul>
<li>You are assigned a target (another player in the game)</li>
<li>You can track your targets location (in realtime) via a map</li>
<li>Text messages are sent when you are within 100 meters of your target</li>
<li>Text messages are sent when the player after you is within 100 meters of you</li>
<li>You “kill” your target by taking a picture of their face (and it passing facial recognition)</li>
<li>If you kill a target, you get their target</li>
<li>The winner is the last one standing</li>
</ul>
<h3>The tech</h3>
<ul>
<li>Node.js</li>
<li>MongoDB</li>
<li>HTML / CSS / JavaScript</li>
<li>Cordova</li>
<li>Lambda Labs facial recognition</li>
<li>OpenLayers / OpenStreetMap</li>
<li>Clockwork SMS</li>
</ul>
<p>All the source code for the hack day code is available on <a href="https://github.com/leecrossley/appsassin" target="_blank">github</a>, let me know if you&#39;d like me to go into detail on any of the aspects.</p>
<h2>What next?</h2>
<p>We&#39;re planning to release a new version of Appsassin for public consumption. Until then, you can <a href="https://vimeo.com/77907408" target="_blank">watch our video of us playing it</a> (professionally produced by team member <a href="https://twitter.com/edhiley" target="_blank">@edhiley</a>, including the music).</p>
<h2>Thanks</h2>
<p>A special thanks again to all the sponsors of the event and everyone involved in the organising and running. A huge success, again.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/web/" term="web"/>
    <category scheme="http://ilee.co.uk/tags/app/" term="app"/>
    <category scheme="http://ilee.co.uk/tags/hack/" term="hack"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Add Structured Data to Your Blog]]></title>
    <link href="http://ilee.co.uk/add-structured-data-to-your-blog/"/>
    <id>http://ilee.co.uk/add-structured-data-to-your-blog/</id>
    <published>2013-10-25T09:45:35.000Z</published>
    <updated>2013-10-25T10:21:15.000Z</updated>
    <content type="html"><![CDATA[<h2>Structured data</h2>
<p>You&#39;ve probably heard of Structured Data, it comes in several different formats, microdata, microformats, RDFa / RDFa Lite but Google are now officially recommending that you use the microdata format.</p>
<p>By using Structured Data, you&#39;re allowing search engines and bots to produce “Rich Snippets” from your data, as the structure and semantic meaning is defined.</p>
<h3>Microdata</h3>
<p>If you want to upset yourself, you can lose a few days reading the <a href="http://www.w3.org/html/wg/drafts/microdata/master/" target="_blank">W3C HTML Microdata Draft</a>, or you can just carry on reading and I&#39;ll show you how simple it really is.</p>
<h2>This blog</h2>
<p>Let‘s take this blog as an example. I’ve followed the Schema.org <a href="http://schema.org/BlogPosting" target="_blank">BlogPosting</a> schema to enrich each blog post with microdata. This enables search engines to understand the structure of the blog post and what the data actually means.</p>
<figure class="highlight lang-html"><figcaption><span>Without microdata </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">article</span> <span class="attribute">class</span>=<span class="value">"post"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"post-content"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">header</span>&gt;</span>
            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"icon"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
            <span class="tag">&lt;<span class="title">time</span> <span class="attribute">datetime</span>=<span class="value">"2013-10-25T09:45:35.000Z"</span>&gt;</span>25th Oct 2013<span class="tag">&lt;/<span class="title">time</span>&gt;</span>
            <span class="tag">&lt;<span class="title">h1</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span>Add Structured Data to Your Blog<span class="tag">&lt;/<span class="title">h1</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">header</span>&gt;</span>
        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"entry"</span>&gt;</span>
            <span class="tag">&lt;<span class="title">h2</span>&gt;</span>Structured data<span class="tag">&lt;/<span class="title">h2</span>&gt;</span>
            ...
        <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
<span class="tag">&lt;/<span class="title">article</span>&gt;</span>
</pre></td></tr></table></figure>

<figure class="highlight lang-html"><figcaption><span>With microdata </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">article</span> <span class="attribute">class</span>=<span class="value">"post"</span> <span class="attribute">itemscope</span> <span class="attribute">itemtype</span>=<span class="value">"http://schema.org/BlogPosting"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"post-content"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">header</span>&gt;</span>
            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"icon"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
            <span class="tag">&lt;<span class="title">time</span> <span class="attribute">datetime</span>=<span class="value">"2013-10-25T09:45:35.000Z"</span> <span class="attribute">itemprop</span>=<span class="value">"datePublished"</span>&gt;</span>25th Oct 2013<span class="tag">&lt;/<span class="title">time</span>&gt;</span>
            <span class="tag">&lt;<span class="title">h1</span> <span class="attribute">class</span>=<span class="value">"title"</span> <span class="attribute">itemprop</span>=<span class="value">"name headline"</span>&gt;</span>Add Structured Data to Your Blog<span class="tag">&lt;/<span class="title">h1</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">header</span>&gt;</span>
        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"entry"</span> <span class="attribute">itemprop</span>=<span class="value">"articleBody"</span>&gt;</span>
            <span class="tag">&lt;<span class="title">h2</span>&gt;</span>Structured data<span class="tag">&lt;/<span class="title">h2</span>&gt;</span>
            ...
        <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
<span class="tag">&lt;/<span class="title">article</span>&gt;</span>
</pre></td></tr></table></figure>


<p>There are 2 main differences:</p>
<ul>
<li>I have added <em>itemscope</em> and <em>itemtype</em> attributes to the top level article element, which allows bots to understand that I‘m writing a blog post and that I’m following the Schema.org standard.</li>
<li>I have added various <em>itemprop</em> attributes to certain elements within the article. This allows bots to understand which element relates to which property from Schema.org. <strong>Please note</strong>, you don&#39;t need to use every property on Schema.org(!), just pick what is appropriate to your content.</li>
</ul>
<h2>Testing</h2>
<p>You‘ll want to ensure that what you’ve done is right. Fortunately, Google have a free <a href="http://www.google.com/webmasters/tools/richsnippets" target="_blank">Rich Snippets testing tool</a>. You can see the results for this blog <a href="http://www.google.com/webmasters/tools/richsnippets?q=ilee.co.uk" target="_blank">here</a>. You should also double check that your HTML is still valid using the <a href="http://validator.w3.org/" target="_blank">W3C Validator</a>.</p>
<p><strong>There will be a day when you ALWAYS use structured data, make that day today.</strong></p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/html/" term="html"/>
    <category scheme="http://ilee.co.uk/tags/web/" term="web"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Finding Cordova Plugins for Your Apps]]></title>
    <link href="http://ilee.co.uk/finding-cordova-plugins-for-your-apps/"/>
    <id>http://ilee.co.uk/finding-cordova-plugins-for-your-apps/</id>
    <published>2013-10-24T07:50:38.000Z</published>
    <updated>2013-10-25T08:50:39.000Z</updated>
    <content type="html"><![CDATA[<h2>PlugReg</h2>
<p>2 months ago, <a href="http://ilee.co.uk/plugin-registry-for-cordova-phonegap/">I wrote about</a> my new plugin registry, <a href="http://www.plugreg.com/" target="_blank">PlugReg</a>. It now boasts about 200 different plugins from over 100 authors. I&#39;ve taken some feedback on board and implemented a new feature to help you find the plugins you need for your apps.</p>
<h3>What&#39;s changed</h3>
<p>Some of the new features and bug fixes:</p>
<ul>
<li><strong>Platform Filters</strong>. You can now filter your search results, or all plugins by platform</li>
<li><strong>Logo</strong>. Shiny new logo</li>
<li><strong>Ordering</strong>. Fixed issues with ordering due to case issues</li>
</ul>
<p>I fixed the ordering by doing:</p>
<figure class="highlight lang-javascript"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
</pre></td><td class="code"><pre><span class="function"><span class="keyword">function</span> <span class="title">byCase</span><span class="params">(a, b)</span>{</span>
    <span class="keyword">return</span> a.name.toLowerCase().localeCompare(b.name.toLowerCase());
}

...

plugins.sort(byCase);
</pre></td></tr></table></figure>

<p>Does anyone know a better way of doing this with mongodb / mongoose?</p>
<h2>Suggestions</h2>
<p>Please keep the suggestions coming, I‘m keen to push forward with new features and improvements. Add your own plugins or any plugins you have used if you haven’t already.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/phonegap/" term="phonegap"/>
    <category scheme="http://ilee.co.uk/tags/iphone/" term="iphone"/>
    <category scheme="http://ilee.co.uk/tags/android/" term="android"/>
    <category scheme="http://ilee.co.uk/tags/web/" term="web"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Use the Right HTTP Status Codes]]></title>
    <link href="http://ilee.co.uk/use-the-right-http-status-codes/"/>
    <id>http://ilee.co.uk/use-the-right-http-status-codes/</id>
    <published>2013-10-15T14:39:29.000Z</published>
    <updated>2013-10-15T15:28:19.000Z</updated>
    <content type="html"><![CDATA[<h2>HTTP status codes</h2>
<p>Every response from a server carries an HTTP status code, this provides clients with the ability to formally identify the status of the response and has other uses, such as identifying a type of error.</p>
<p>I&#39;m currently working with a &quot;<a href="http://en.wikipedia.org/wiki/Representational_state_transfer" target="_blank">RESTful</a>&quot; (well, advertised as RESTful) <a href="http://en.wikipedia.org/wiki/Application_programming_interface" target="_blank">API</a>, where the HTTP status codes are all over the place (hence the reason for this blog post).</p>
<p>An API especially should use the correct status codes so that responses to basic requests can be defined by status codes, without the need for any additional data.</p>
<h2>The basics</h2>
<ul>
<li><strong>1xx</strong> - Hang on</li>
<li><strong>2xx</strong> - <a href="http://www.youtube.com/watch?v=erETKfL9LbU" target="_blank">Sha-ting</a></li>
<li><strong>3xx</strong> - Move away</li>
<li><strong>4xx</strong> - That&#39;s your bad</li>
<li><strong>5xx</strong> - That&#39;s my bad</li>
</ul>
<p>OK, so I‘m not being totally serious with these. I’m also not going to write them out or copy and paste, as there are 1000s of websites that already have. Just check <a href="http://en.wikipedia.org/wiki/List_of_HTTP_status_codes" target="_blank">Wikipedia</a> for the list.</p>
<h2>Test your status codes</h2>
<p>There are some online tools to check your status codes, <a href="http://httpstatus.io/" target="_blank">httpstatus.io</a> looks good (and ends with .io, so it <em>must</em> be cool).</p>
<h2>I&#39;m a tea pot</h2>
<p>The Hyper Text Coffee Pot Control Protocol is a nonessential and humorous communications protocol for controlling, monitoring, and diagnosing coffee pots and has the following status code (yes this is real):</p>
<ul>
<li><strong>418</strong> I&#39;m a teapot (may be short and/or stout)</li>
</ul>
<p>Time for a coffee.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/web/" term="web"/>
    <category scheme="http://ilee.co.uk/tags/html/" term="html"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Git Commit Message Format]]></title>
    <link href="http://ilee.co.uk/git-commit-message-format/"/>
    <id>http://ilee.co.uk/git-commit-message-format/</id>
    <published>2013-10-10T08:51:33.000Z</published>
    <updated>2013-10-10T09:35:36.000Z</updated>
    <content type="html"><![CDATA[<h2>Format frustration</h2>
<p>I recently read a short <em>pro tip</em> by <a href="https://twitter.com/simonowendesign" target="_blank">Simon Owen</a> on coderwall about commit messages (<a href="https://coderwall.com/p/pnk0ra" target="_blank">see here</a>). It turns out it&#39;s not just me that gets frustrated with incorrectly formatted git commit messages, especially if you pull request or are working on one of my repositories.</p>
<p>Please read this before you do another git commit. There is a right way and a wrong way to write your git commit messages.</p>
<h2>The right way</h2>
<p>Follow these simple guideline(s):</p>
<ul>
<li>Stick to a maximum of 50 characters for the summary to briefly describe the commit</li>
<li>Capitalise the first letter</li>
<li>Write in the imperative (e.g. “Fix bug” or “Add file” not “Fixed bug” or “Added file”)</li>
<li>Don&#39;t end with a full stop</li>
<li>Reference issue numbers with a #</li>
</ul>
<p>Optional:</p>
<ul>
<li>If used, wrap the descriptive body to 72 chars with a blank line above it (I rarely go beyond a summary in practice)</li>
<li>Prefix with “area: ” where the area is an identifier for the area of the code the commit relates to (personally I don&#39;t do this but it can be useful in some circumstances)</li>
</ul>
<h2>Why?</h2>
<p>Following the guidelines will make it easier for you to review and identify commits (especially with git log, which has no raw wrapping) and it also makes it easier for your fellow developers to work with you.</p>
<p>If you take a look at auto generated git messages, you&#39;ll see they conform to the above guidelines (e.g. git merge or git revert).</p>
<h2>Automated user git messages</h2>
<p>Bad bad bad. You‘re not adding any value by doing this. You can always alias if you don’t want to type git commit -m.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/git/" term="git"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Which Mobile App Platform First?]]></title>
    <link href="http://ilee.co.uk/which-mobile-app-platform-first/"/>
    <id>http://ilee.co.uk/which-mobile-app-platform-first/</id>
    <published>2013-10-03T16:10:34.000Z</published>
    <updated>2013-10-03T16:53:00.000Z</updated>
    <content type="html"><![CDATA[<h2>Developing apps for iOS first</h2>
<p>A <a href="https://twitter.com/VickiHigham" target="_blank">friend</a> today asked me a very interesting question:</p>
<blockquote><p>“Can you see a reason people would launch on iOS first?” … “they don&#39;t have the biggest market share”</p>
<footer><strong>- @VickiHigham</strong></footer></blockquote>


<p><img src="/img/app-platforms.png" alt="Mobile App Platforms"></p>
<p>This got me thinking. Yes, it&#39;s true that there are many more Android devices than iOS devices (both mobile and tablets) in circulation. In terms of app downloads and more importantly revenue generated from paid apps and in app purchases, iOS has always been a clear winner in my experience (more than 10x), meaning that iOS is the most lucrative app market.</p>
<p>I&#39;ve generally released iOS apps first, probably because of higher volume of grossing apps. </p>
<h3>The curveball</h3>
<p>In reality, it doesn‘t actually doesn’t make sense to develop for iOS first if you‘re going to be targeting multiple platforms (especially if you’re using something like Cordova / PhoneGap)… let me convince you why.</p>
<h2>Developing apps for Android first</h2>
<h3>It&#39;s all about the review process</h3>
<p>iOS apps have to go through the cumbersome <a href="https://developer.apple.com/appstore/guidelines.html" target="_blank">Apple review process</a>, meaning delays of up to 2 weeks (or sometimes longer), where you can&#39;t make any changes to your app or have anyone using it. Subsequent releases also have to  go through the review process, meaning bug fixes take longer to reach customers. Windows Phone has a similar review process.</p>
<p>If you were to develop apps for Android first, because of the fast release process there would be a raft of benefits:</p>
<ul>
<li>The app could potentially be released quicker</li>
<li>Bugs can be fixed and released quicker</li>
<li>A more robust version could then be released to iOS</li>
</ul>
<h2>Other considerations</h2>
<p>Of course, there are other considerations, such as target location, device capabilities etc but we should be at least questioning the “iOS First” approach that seems to have become the default.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/iphone/" term="iphone"/>
    <category scheme="http://ilee.co.uk/tags/android/" term="android"/>
    <category scheme="http://ilee.co.uk/tags/app/" term="app"/>
    <category scheme="http://ilee.co.uk/tags/phonegap/" term="phonegap"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Hack to Prevent JSON Hijacking]]></title>
    <link href="http://ilee.co.uk/hack-to-prevent-json-hijacking/"/>
    <id>http://ilee.co.uk/hack-to-prevent-json-hijacking/</id>
    <published>2013-10-02T16:32:24.000Z</published>
    <updated>2013-10-02T17:06:55.000Z</updated>
    <content type="html"><![CDATA[<h2>JSON hijacking</h2>
<p>I recently needed to ensure a JSON service response couldn&#39;t be misused via external <a href="http://haacked.com/archive/2009/06/25/json-hijacking.aspx" target="_blank">JSON hijacking</a>. This is a very common problem, especially in older browsers. Fortunately, there&#39;s a nice little hack to prevent the hijack.</p>
<p>Microsoft, Google, Facebook etc are all using variations of this to allow AJAX requests on their (same) domain to have full access, while preventing hijacking by others.</p>
<h2>The hack</h2>
<p>Force requests not to use JSONP and allow the Same Origin Policy to do it&#39;s job, by adding a simple (and evil) endless loop to the start of a JSON response:</p>
<figure class="highlight lang-javascript"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="keyword">while</span>(<span class="number">1</span>);
</pre></td></tr></table></figure>

<p>Because you aren&#39;t using a JSONP request, you have the ability to modify the response, e.g.</p>
<figure class="highlight lang-javascript"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>JSON.parse(<span class="keyword">this</span>.responseText.slice(<span class="string">"while(1);"</span>.length));
</pre></td></tr></table></figure>

<p>Whereas illegitimate users will find themselves sucked into a black hole.</p>
<p>Facebook use a similar variation to achieve the same result:</p>
<figure class="highlight lang-javascript"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="keyword">for</span>(;;);
</pre></td></tr></table></figure>

<p>Personally, I&#39;d like to lead the JSON response with the throwing of an error message :)</p>
<figure class="highlight lang-javascript"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="keyword">throw</span> <span class="string">"JSON THIEF"</span>;
</pre></td></tr></table></figure>

<h2>Limitations</h2>
<p>Using this quick and easy hack means you don&#39;t need to mess around storing and managing CSRF (cross-site request forgery) tokens. <strong>Winning</strong>. It‘s not however a solution for cross-site request forgery itself. Maybe I’ll cover that on another, less sunny day.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/javascript/" term="javascript"/>
    <category scheme="http://ilee.co.uk/tags/web/" term="web"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[The JavaScript IsNumeric Function]]></title>
    <link href="http://ilee.co.uk/determine-if-a-javascript-object-is-numeric/"/>
    <id>http://ilee.co.uk/determine-if-a-javascript-object-is-numeric/</id>
    <published>2013-09-26T16:16:00.000Z</published>
    <updated>2013-09-26T16:35:20.000Z</updated>
    <content type="html"><![CDATA[<h2>isNumeric</h2>
<p>Today I wrote a (very small) node package to allow you to determine if a JavaScript object is numeric or not. It turns out it‘s really not a lot of code, but took a little while to get just right. It’s tested with every type of numeric I could think up (and also non-numerics).</p>
<h3>Using npm</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="title">npm</span> install isnumeric
</pre></td></tr></table></figure>

<p>To then include isnumeric in your node app:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="keyword">var</span> isNumeric = <span class="keyword">require</span>(<span class="string">"isnumeric"</span>);
</pre></td></tr></table></figure>

<h3>Direct dependency</h3>
<p>Download the minified version <a href="http://bit.ly/isnumeric" target="_blank">here</a>, reference the js file and isNumeric will become a global variable.</p>
<h2>The code</h2>
<p>Essentially, this is it:</p>
<figure class="highlight lang-javascript"><figcaption><span>isNumeric </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre><span class="keyword">var</span> isNumeric = <span class="function"><span class="keyword">function</span> <span class="params">(obj)</span> {</span>
    obj = <span class="keyword">typeof</span>(obj) === <span class="string">"string"</span> ? obj.replace(<span class="string">","</span>, <span class="string">"."</span>) : obj;
    <span class="keyword">return</span> !isNaN(parseFloat(obj)) &amp;&amp; isFinite(obj) &amp;&amp; Object.prototype.toString.call(obj).toLowerCase() !== <span class="string">"[object array]"</span>;
};
</pre></td></tr></table></figure>


<p>The first line of the function could be omitted if you weren&#39;t concerned with supporting comma decimals (e.g. “1,1”) like in some countries.</p>
<h2>The tests</h2>
<p>There are currently <a href="https://github.com/leecrossley/isNumeric/blob/master/spec.js" target="_blank">64 tests</a>! so it&#39;s pretty well tested. I certainly win the award for smallest amount of code with most amount of tests :)</p>
<p>Any disagreements or improvements please pull request.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/javascript/" term="javascript"/>
    <category scheme="http://ilee.co.uk/tags/web/" term="web"/>
    <category scheme="http://ilee.co.uk/tags/html/" term="html"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[My Shiny New iPhone 5s]]></title>
    <link href="http://ilee.co.uk/my-shiny-new-iphone-5s/"/>
    <id>http://ilee.co.uk/my-shiny-new-iphone-5s/</id>
    <published>2013-09-23T11:49:36.000Z</published>
    <updated>2013-09-23T12:48:42.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/img/iphone5s.png" alt="iLee iPhone 5s"></p>
<h2>Mobile app developer</h2>
<p>As an app developer, I&#39;m burdened with buying mobiles and tablets all the time and have <a href="/more-mobile-devices-than-socks/">more mobile devices than socks</a>. Having said that, I&#39;m actually planning to use my new iPhone for day-to-day usage too (i.e. actually making phone calls).</p>
<h2>Crazy queuing</h2>
<p><strong>I didn&#39;t queue</strong> for my new iPhone 5s, I also didn&#39;t <a href="http://news.sky.com/story/1144613/apple-iphone-fights-as-homeless-hired-to-queue" target="_blank">pay the homeless</a> to queue for me. I ordered in 60 seconds from the comfort of my home, on the o2 website and it arrived the next working day. Some people really need to get some common sense.</p>
<h2>Thoughts on day one</h2>
<h3>The good bits</h3>
<ul>
<li>Configuring from another iPhone backup was simple.</li>
<li>The Apple A7 chip is <em>fast</em>, I feel the performance increase doing anything on the device.</li>
<li>I&#39;m no photographer but the 8 megapixel camera with dual LED flash does live up to (some of) the hype. Burst mode is pretty cool too.</li>
<li>The Touch ID home button is a <em>nice touch</em>, even if it <a href="http://istouchidhackedyet.com/" target="_blank">may have been hacked</a> already. You wouldn&#39;t use an iPhone if you had security concerns though, right? :)</li>
<li>Free Apple apps. Sweet. Probably won&#39;t use them though.</li>
<li>Apparently I can <a href="http://www.independent.co.uk/life-style/gadgets-and-tech/news/newly-released-apple-iphone-5s-on-ebay-for-2000-8831594.html" target="_blank">sell it for up to £2K</a> right now on ebay.</li>
</ul>
<h3>The maybe-good bits</h3>
<ul>
<li>iBeacon, we‘ll see. Not surprised it’s not a standard of course.</li>
</ul>
<h3>The not-so-good bits</h3>
<ul>
<li>The screen, it&#39;s just OK. When can we have edge-to-edge displays?</li>
<li>Battery life, it‘s depleting at the same fast rate as I’m used too. I&#39;ve <a href="http://www.ebay.co.uk/itm/130897161738" target="_blank">bought this</a> to overcome this slightly.</li>
<li>A bit disappointed that there aren&#39;t many other innovative features.</li>
</ul>
<h2>Summary</h2>
<p>It&#39;s pretty shiny. I can make phone calls.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/iphone/" term="iphone"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[iOS7 Navigation Bar Using CSS]]></title>
    <link href="http://ilee.co.uk/ios7-navigation-bar-using-css/"/>
    <id>http://ilee.co.uk/ios7-navigation-bar-using-css/</id>
    <published>2013-09-20T10:15:11.000Z</published>
    <updated>2013-10-17T14:45:56.000Z</updated>
    <content type="html"><![CDATA[<h2>iOS7 elements with HTML and CSS</h2>
<p>Since the early beta versions of iOS7, front-end developers have been replicating features of the new interface with HTML and CSS. There are <strong>many</strong> implementations of control center popup, but people don&#39;t seem to have implemented the <em>useful</em> elements.</p>
<h2>The UINavigationBar</h2>
<p>Almost every app has a navigation bar. As a Cordova / PhoneGap developer, I thought it would be interesting to see if I could come close to implementing the new iOS7 UINavigationBar style in HTML and CSS, since no one else had (after googling and searching sites such as codepen).</p>
<h2>My implementation</h2>
<p>The tricky part is obviously the transparency / blur / “frosting” effects, so here&#39;s how I set about it.</p>
<h3>The transparency</h3>
<p>Using background rgba for alpha transparency on the usual header element (absolute or fix positioned etc), I was able to show the content underneath. This works well but I couldn&#39;t find a way to add any sort of blur effect to this element without distorting the header content.</p>
<figure class="highlight lang-css"><figcaption><span>header styles </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="code"><pre><span class="id">#header</span> <span class="rules">{
    <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute;</span></span>
    <span class="rule"><span class="attribute">z-index</span>:<span class="value"> <span class="number">3</span>;</span></span>
    <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">0</span>;</span></span>
    <span class="rule"><span class="attribute">left</span>:<span class="value"> <span class="number">0</span>;</span></span>
    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">100</span>%;</span></span>
    <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">44</span>px;</span></span>
    <span class="rule"><span class="attribute">line-height</span>:<span class="value"> <span class="number">44</span>px;</span></span>
    <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">rgba(<span class="number">59</span>,<span class="number">89</span>,<span class="number">152</span>,<span class="number">0.8</span>)</span>;</span></span>
    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span>;</span></span>
    <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#eee</span>;</span></span>
    <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">20</span>px;</span></span>
    <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center;</span></span>
<span class="rule">}</span></span>
</pre></td></tr></table></figure>


<h3>The blur / frosting</h3>
<p>I solved this by absolute positioning another element directly underneath the usual header element, with a lower z-index of the header but a higher z-index than the content underneath.</p>
<figure class="highlight lang-css"><figcaption><span>header-blur styles </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre><span class="class">.header-blur</span> <span class="rules">{
    <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute;</span></span>
    <span class="rule"><span class="attribute">z-index</span>:<span class="value"> <span class="number">2</span>;</span></span>
    <span class="rule"><span class="attribute">-webkit-filter</span>:<span class="value"> <span class="function">blur(<span class="number">10</span>px)</span>;</span></span>
    <span class="rule"><span class="attribute">-moz-filter</span>:<span class="value"> <span class="function">blur(<span class="number">10</span>px)</span>;</span></span>
    <span class="rule"><span class="attribute">-ms-filter</span>:<span class="value"> <span class="function">blur(<span class="number">10</span>px)</span>;</span></span> 
    <span class="rule"><span class="attribute">-o-filter</span>:<span class="value"> <span class="function">blur(<span class="number">10</span>px)</span>;</span></span>
    <span class="rule"><span class="attribute">filter</span>:<span class="value"> <span class="function">blur(<span class="number">10</span>px)</span>;</span></span>
    <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">rgba(<span class="number">250</span>,<span class="number">250</span>,<span class="number">250</span>,<span class="number">0.9</span>)</span>;</span></span>
    <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">0</span>;</span></span>
    <span class="rule"><span class="attribute">left</span>:<span class="value"> <span class="number">0</span>;</span></span>
    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">100</span>%;</span></span>
    <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">44</span>px;</span></span>
    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span>;</span></span>
<span class="rule">}</span></span>
</pre></td></tr></table></figure>


<p>After a bit of fiddling I managed to get the values right and get it working pretty well.</p>
<h3>iScroll</h3>
<p>I added <a href="https://github.com/cubiq/iscroll" target="_blank">iScroll</a> to the mix, as I usually use this when developing mobile apps. It required a little modification to the usual setup (around the top positioning and adding a padding instead) but showcases the iOS7 style navigation well.</p>
<h2>Demo</h2>
<p>You can see a working demo and all the associated code <a href="http://codepen.io/leecrossley/details/JEexG" target="_blank">here</a>, feel free to fork and make your own changes or improvements. I&#39;m also open to feedback as usual.</p>
<h2 id="update"><strong>UPDATE</strong></h2>

<p>It turns out that I must have been tipsy to see the blur effect in the code above. It wasn‘t actually applying the blur to elements underneath the header because they aren’t nested.</p>
<p>The only solution I could think up was to clone the body, convert this to a canvas and apply the blur to that. I then probe the scroll event to displace the blurred canvas at the correct y offset.</p>
<p>Sounds hacky, but it&#39;s not too bad (<em>other than hiding the header when cloning the body and forcing iScroll to show overflow until the canvas is generated, oh and pulling in additional 3rd party libraries and actually cloning the body in the first place…</em>). Not sure it‘s worth it, but I’ll do some performance testing.</p>
<p>The <a href="http://codepen.io/leecrossley/details/JEexG" target="_blank">example code</a> has been updated, feel free to fork.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/iphone/" term="iphone"/>
    <category scheme="http://ilee.co.uk/tags/app/" term="app"/>
    <category scheme="http://ilee.co.uk/tags/phonegap/" term="phonegap"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Asynchronous JavaScript Files]]></title>
    <link href="http://ilee.co.uk/executing-javascript-files-asynchronously/"/>
    <id>http://ilee.co.uk/executing-javascript-files-asynchronously/</id>
    <published>2013-09-18T14:52:52.000Z</published>
    <updated>2013-09-18T15:35:23.000Z</updated>
    <content type="html"><![CDATA[<h2>It&#39;s easy-peasy-lemon-squeezy with HTML5</h2>
<p>The <em>async</em> attribute added to HTML5 makes the job all too simple:</p>
<figure class="highlight lang-html"><figcaption><span>async attribute </span></figcaption><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"script.js"</span> <span class="attribute">async</span>&gt;</span><span class="javascript"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
</pre></td></tr></table></figure>


<p>This tells the browser to execute the script at the first opportunity after it has finished downloading, while the page continues parsing and before the window load event.</p>
<h2>Pre-HTML5</h2>
<p>I‘m writing an embeddable widget at the moment and unfortunately, can’t rely on browser support for the async attribute. This makes me sad, as I really can&#39;t block the page rendering.</p>
<h3>Solution? Defer</h3>
<p>There is a <em>defer</em> attribute, with <a href="http://caniuse.com/script-defer" target="_blank">pretty good support</a> that will execute when the page has finished parsing. Not as good as executing while the page continues parsing though, like with the async attribute.</p>
<p>Below is a way to handle the deferred execution of JavaScript files that will work <strong>in all cases</strong>. It‘s not perfect, the download doesn’t happen immediately like with the async or defer attributes. Also, it fires at the time of the window load event, not before like the native async attribute (which is included for good measure).</p>
<p>Here&#39;s the general gist (untested):</p>
<figure class="highlight lang-javascript"><figcaption><span>general gist </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre>(<span class="keyword">function</span>() {
    <span class="string">"use strict"</span>;
    <span class="function"><span class="keyword">function</span> <span class="title">loadJSAsync</span><span class="params">()</span> {</span>
        <span class="keyword">var</span> js = document.createElement(<span class="string">"script"</span>);
        js.type = <span class="string">"text/javascript"</span>;
        js.src = <span class="string">"script.js"</span>;
        js.async = <span class="literal">true</span>;
        <span class="comment">// insert the "js" script tag to the DOM here ...</span>
    } 
    <span class="keyword">if</span> (window.attachEvent) {
        window.attachEvent(<span class="string">"onload"</span>, loadJSAsync);
    } <span class="keyword">else</span> {
        window.addEventListener(<span class="string">"load"</span>, loadJSAsync, <span class="literal">false</span>);
    }
})();
</pre></td></tr></table></figure>


<p>It basically just delays adding the script tag to the DOM. Maybe there is a way to test for async or defer support and fall back to the window load event hack? I can&#39;t wait for all these old browsers to disappear.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/javascript/" term="javascript"/>
    <category scheme="http://ilee.co.uk/tags/web/" term="web"/>
    <category scheme="http://ilee.co.uk/tags/html/" term="html"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Removing a Property in JavaScript]]></title>
    <link href="http://ilee.co.uk/removing-a-property-in-javascript/"/>
    <id>http://ilee.co.uk/removing-a-property-in-javascript/</id>
    <published>2013-09-16T16:08:22.000Z</published>
    <updated>2013-09-16T16:31:34.000Z</updated>
    <content type="html"><![CDATA[<h2>Remove a JavaScript object property with delete</h2>
<figure class="highlight lang-javascript"><figcaption><span>delete </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="keyword">var</span> thing = { <span class="string">"prop1"</span>: <span class="number">1</span>, <span class="string">"prop2"</span>: <span class="number">2</span> };
<span class="keyword">delete</span> thing.prop1;
expect(thing).toEqual({ <span class="string">"prop2"</span>: <span class="number">2</span> });
</pre></td></tr></table></figure>


<p>Simple, done, use it. End of blog post :)</p>
<p>If it&#39;s not possible to use dot notation (which you always should where you can), you can delete your property like this:</p>
<figure class="highlight lang-javascript"><figcaption><span>delete </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="keyword">var</span> thing = { <span class="string">"prop1"</span>: <span class="number">1</span>, <span class="string">"prop2"</span>: <span class="number">2</span> }, i = <span class="number">1</span>;
<span class="keyword">delete</span> thing[<span class="string">"prop"</span> + i];
expect(thing).toEqual({ <span class="string">"prop2"</span>: <span class="number">2</span> });
</pre></td></tr></table></figure>


<h2>What about deleting variables and functions?</h2>
<p>This is JavaScript, it&#39;s <strong>not</strong> possible to delete variables e.g.</p>
<figure class="highlight lang-javascript"><figcaption><span>no no no </span></figcaption><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="keyword">var</span> thing = <span class="string">"something"</span>;
<span class="keyword">delete</span> thing; <span class="comment">// no no no</span>
</pre></td></tr></table></figure>


<p>It&#39;s <strong>not</strong> possible to delete functions declared in this way either.</p>
<h2>The <em>DontDelete</em> attribute</h2>
<p>There are also some attributes that can be set on properties to prevent their deletion misuse. <em>DontDelete</em> is an example of these, which is present in the length property:</p>
<figure class="highlight lang-javascript"><figcaption><span>no no no </span></figcaption><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="keyword">var</span> thing = <span class="string">"something"</span>;
<span class="keyword">delete</span> thing.length; <span class="comment">// no no no</span>
</pre></td></tr></table></figure>


<h2>Strict mode</h2>
<p>Obviously since my post on <a href="/what-is-javascript-strict-mode/">JavaScript Strict Mode</a> you&#39;re all using it. This has an impact on the delete command (for better), which would cause the above example attempting to delete the .length property to throw an error, as it should.</p>
<p>Happy strict deleting.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/javascript/" term="javascript"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[JSONP in Express/Node.js]]></title>
    <link href="http://ilee.co.uk/jsonp-in-express-nodejs/"/>
    <id>http://ilee.co.uk/jsonp-in-express-nodejs/</id>
    <published>2013-09-11T09:54:44.000Z</published>
    <updated>2013-09-11T10:39:39.000Z</updated>
    <content type="html"><![CDATA[<h2>Express JS</h2>
<p><a href="http://expressjs.com/" target="_blank">Express</a> is a web application framework that facilitates the rapid and scalable development of <a href="nodejs.org">node</a> apps.</p>
<p>I‘m currently building a cross platform mobile application using cordova / phonegap for the app and express for the server. There’s a web interface, but also data can be retrieved in json format from the server by the mobile app. </p>
<h2>Getting server data with Cordova</h2>
<p>It‘s actually easy to get data from a server from within your cordova application, you don’t even need to worry about cross domain requests. Simply add this to your config.xml (which is now the default) to set up cordova correctly:</p>
<figure class="highlight lang-xml"><figcaption><span>config.xml </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">widget</span>&gt;</span>
    <span class="tag">&lt;<span class="title">access</span> <span class="attribute">origin</span>=<span class="value">"*"</span> /&gt;</span>
<span class="tag">&lt;/<span class="title">widget</span>&gt;</span>
</pre></td></tr></table></figure>


<p>Then in my express node app, I do something like this:</p>
<figure class="highlight lang-javascript"><figcaption><span>Express route "/test" </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre>app.get(<span class="string">"/test"</span>, <span class="keyword">function</span>(req, res){
    res.writeHead(<span class="number">200</span>, { <span class="string">"Content-Type"</span>: <span class="string">"application/json"</span> });
    res.write(JSON.stringify({ <span class="string">"my"</span>: <span class="string">"object"</span> }));
    res.end();
});
</pre></td></tr></table></figure>


<p>Although a little long winded in the controller route code (or action method, if you like, for you C# junkies) it works just fine when the mobile app loads the JSON data from the server using get http requests.</p>
<p>The issue is, I do my initial app development in Chrome…</p>
<h2>JSONP to the rescue</h2>
<p><a href="http://en.wikipedia.org/wiki/JSONP" target="_blank">JSONP</a> is a <em>hack</em> around doing cross domain get requests but requires the cooperation of the server to succeed. Unfortunately, you can‘t request random websites data (client-side) using JSONP. We need to set some config in the express app and do things slightly differently (this isn’t very well documented).</p>
<h3>Setting up express</h3>
<p>When configuring express, you need to set an additional property:</p>
<figure class="highlight lang-javascript"><figcaption><span>Configuring express </span></figcaption><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>app.set(<span class="string">"jsonp callback"</span>, <span class="literal">true</span>);
</pre></td></tr></table></figure>


<h3>In your route code</h3>
<p>Things get simplier:</p>
<figure class="highlight lang-javascript"><figcaption><span>Express route "/test" </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>app.get(<span class="string">"/test"</span>, <span class="keyword">function</span>(req, res){
    res.jsonp({ <span class="string">"my"</span>: <span class="string">"object"</span> });
});
</pre></td></tr></table></figure>


<p>That‘s it, you’re done! You can happily make JSONP requests to your server.</p>
<p>Wasn‘t hard was it? Shame they don’t make it this obvious in the documentation.</p>
<p>Go and make yourself a coffee, you deserve it.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/app/" term="app"/>
    <category scheme="http://ilee.co.uk/tags/web/" term="web"/>
    <category scheme="http://ilee.co.uk/tags/javascript/" term="javascript"/>
    <category scheme="http://ilee.co.uk/tags/phonegap/" term="phonegap"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Mongoose Docs and JSON.stringify]]></title>
    <link href="http://ilee.co.uk/mongoose-documents-and-jsonstringify/"/>
    <id>http://ilee.co.uk/mongoose-documents-and-jsonstringify/</id>
    <published>2013-09-10T12:22:41.000Z</published>
    <updated>2013-09-10T13:05:44.000Z</updated>
    <content type="html"><![CDATA[<h2>Mongoose JS</h2>
<p>If you‘re a JavaScript / Node.js developer that uses MongoDB, you’ll probably have already heard of <a href="http://mongoosejs.com/" target="_blank">Mongoose</a>. It&#39;s &quot;<em>elegant mongodb object modelling for node.js</em>&quot; and saves you writing endless mappings, castings and validation. If you&#39;ve not used it before <a href="http://mongoosejs.com/docs/index.html" target="_blank">check it out</a>.</p>
<h2>Mongoose documents / objects</h2>
<p>The reason for this post isn‘t just to tell you to go and play with Mongoose, I’m hoping people will find this post when the get stuck with something, like I did at the weekend.</p>
<h3>The problem</h3>
<p>I was happily coding away (slightly functionally) when I hit an interesting issue. Here&#39;s a simplified version to help me explain:</p>
<figure class="highlight lang-javascript"><figcaption><span>The problem </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="keyword">var</span> addProperty = λ.each(<span class="keyword">function</span>(item) {
    item.newProperty = <span class="string">"anything"</span>;
});

Items.find(<span class="keyword">function</span>(err, items) {
    addProperty(items);
    console.log(JSON.stringify(items));
});
</pre></td></tr></table></figure>


<p>After adding the property “newProperty” to each of the items, I could then use the property without any issues - as you&#39;d expect. As soon as I tried to JSON.stringify() the items, the new property was omitted! I spent about 15 minutes trying to debug and convince myself the world was broken until I realised why.</p>
<h3>The reason</h3>
<p>The “items” collection is actually an array of special Mongoose documents with various magical properties to help you save an item back again etc. This has it‘s own toJSON function that is called when JSON.stringify is called, omitting any modifications to it’s structure since the last save or retrieval.</p>
<h3>The solution</h3>
<p>A quick Google led me to a StackOverflow answer that suggested messing with the Mongoose document, ewww. Fortunately I found a better solution that I posted as an <a href="http://stackoverflow.com/a/18686966/909459" target="_blank">answer</a>.</p>
<figure class="highlight lang-javascript"><figcaption><span>The solution </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre>Items.find().lean().exec(<span class="keyword">function</span>(err, items) {
    addProperty(items);
    console.log(JSON.stringify(items));
});
</pre></td></tr></table></figure>


<p>By specifying the &quot;<a href="http://mongoosejs.com/docs/api.html#query_Query-lean" target="_blank">lean</a>&quot; option when performing a query, you will be returned a plain JavaScript object that behaves in the regular way. Provided you don‘t need to save the item again (as this is not a MongooseDocument, no getters and setters are applied) you will be able to call JSON.stringify to your hearts content. It’s faster too, you should probably specify the lean option whenever you need objects for readonly purposes.</p>
<p>Mystery solved.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/javascript/" term="javascript"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Rock Paper Scissors @manc_js]]></title>
    <link href="http://ilee.co.uk/rock-paper-scissors-manc_js/"/>
    <id>http://ilee.co.uk/rock-paper-scissors-manc_js/</id>
    <published>2013-09-05T07:08:07.000Z</published>
    <updated>2013-09-05T08:11:45.000Z</updated>
    <content type="html"><![CDATA[<h2>Manc JS</h2>
<p>Last night I attended my first <a href="http://mancjs.com/" target="_blank">Manc JS</a>. If you know me, you know that I like a <a href="/road-to-hack-manchester/">good hack</a> and the “Rock Paper Scissors Bots” night lived up to expectations. Props to <a href="https://twitter.com/martinrue" target="_blank">@martinrue</a>.</p>
<h2>The game</h2>
<p>Each bot played 50 “hands” against each of the other bots. Unlike traditional Rock Paper Scissors, two new entities were introduced:</p>
<ul>
<li>“dynamite”, which beats paper, scissors and rock <em>but can only be used a maximum of 5 times per game</em></li>
<li>“water (balloon)”, which beats dynamite only and <em>can be used any number of times</em></li>
</ul>
<p>Bots were comprised of at least 3 functions, “init”, “play” and “result”, which were called by the server running the bots against each other.</p>
<h2>My approach</h2>
<p>Even the most complex of strategies would struggle to beat a truly random opponent, although the “dynamite” hand mitigated this slightly. Nevertheless, I didn‘t want to write any random code, it’s way less fun and more unpredictable. I decided it would be much better to consistently secure the top positions on the leaderboard as opposed to go for a random <strong>boom or bust</strong> or <strong>hit and hope</strong>, we are programmers after all.</p>
<h3>Sub-bots</h3>
<p>Although we were only allowed to play one hand for each turn, my approach was to create multiple sub-bots that would play silently each time:</p>
<figure class="highlight lang-javascript"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre><span class="comment">// Example sub-bot that always plays "paper"</span>
bot.paperBot = (<span class="function"><span class="keyword">function</span> <span class="params">()</span> {</span>
    <span class="keyword">var</span> bot = {};
    
    bot.winners = <span class="number">0</span>;
    bot.lastPlay = <span class="string">""</span>;
    
    bot.nextPlay = <span class="function"><span class="keyword">function</span> <span class="params">()</span> {</span>
        <span class="keyword">var</span> play = <span class="string">"paper"</span>;
        bot.lastPlay = play;
        <span class="keyword">return</span> play;
    };

    <span class="keyword">return</span> bot;
})();
</pre></td></tr></table></figure>

<p>After the result of each hand was returned by the server, the outcome of whether each sub-bot would have won was recorded. Over the 50 hands, using a greedy approach, the sub-bot that was played was the one with the most amount of winners.</p>
<p>Given more time and more sub-bots this approach would have become slightly more robust.</p>
<h3>We‘re gonna light it up, like it’s dynamite</h3>
<p>I played with a few ideas for dynamite, it appeared quite quickly that most bots played dynamite straight after a draw (as points were carried), so initially I played water straight after a draw then dynamite straight after that. This wasn&#39;t a good strategy, as water is a weak hand.</p>
<p>The approach I rested on was to not ever bother playing water, ever, and to play dynamite (if any was remaining) 2 hands after a draw, as this appeared to be the least likely time another bot would play it :)</p>
<p>Obviously, even when dynamite was played, the outcome of whether each sub-bot would have won was still recorded.</p>
<h2>Tests</h2>
<p>My code was ugly, but it was linted and had some noddy jasmine tests (using grunt and plugins) for my own sanity and so not to waste too many trial runs.</p>
<figure class="highlight lang-javascript"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="code"><pre><span class="comment">// Example of my noddy tests</span>
it(<span class="string">"should init and set opponent"</span>, <span class="keyword">function</span>() {
    init(<span class="string">"test"</span>);
    expect(bot.opponent).toEqual(<span class="string">"test"</span>);
});

it(<span class="string">"should use paper as the first play"</span>, <span class="keyword">function</span>() {
    <span class="comment">// First play always paper, as all bots have 0 wins</span>
    <span class="comment">// NB: Should randomise the first bot :)</span>
    expect(play()).toEqual(<span class="string">"paper"</span>);
});

it(<span class="string">"should win the first hand against rock and increment winning tally"</span>, <span class="keyword">function</span>() {
    result({ test: <span class="string">"rock"</span>, lee: <span class="string">"paper"</span>, winner: <span class="string">"lee"</span>, draw: <span class="literal">false</span> });
    expect(bot.paperBot.winners).toEqual(<span class="number">1</span>);
});
</pre></td></tr></table></figure>

<h2>Result</h2>
<p>Meh, I came 2nd. Not bad out of 17 I guess ;)</p>
<p>I wish we had more time to play. Maybe this could become an ongoing challenge..?</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/web/" term="web"/>
    <category scheme="http://ilee.co.uk/tags/hack/" term="hack"/>
    <category scheme="http://ilee.co.uk/tags/javascript/" term="javascript"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Selling Some Domain Names]]></title>
    <link href="http://ilee.co.uk/selling-some-domain-names/"/>
    <id>http://ilee.co.uk/selling-some-domain-names/</id>
    <published>2013-09-04T12:02:18.000Z</published>
    <updated>2013-09-04T12:29:12.000Z</updated>
    <content type="html"><![CDATA[<h2>Domain names to buy</h2>
<p>Today I have listed some domain names to buy, including “domainnamestobuy.com” (should really stick them on there!). I was prompted to have this spring clean as I attempt to consolidate hosting providers and domain name registrars over the coming months.</p>
<h2>Current list</h2>
<p>The following domain names are now for sale on <a href="http://www.sedo.co.uk/main.php3?language=e&amp;partnerid=315645" target="_blank">sedo</a> (at the time of writing this some 1 or 2 listings are still pending):</p>
<ul>
<li>backingmusic.com (backing music, bought for $2,325 10 years ago)</li>
<li>bidzer.co.uk (a possible bidding auction site)</li>
<li>domainnamestobuy.com (to sell domain names)</li>
<li>bookinbritain.com (hotel / room booking)</li>
<li>bookinbritain.co.uk (hotel / room booking)</li>
<li>bookingbritain.com (hotel / room booking)</li>
<li>bookingbritain.co.uk (hotel / room booking)</li>
<li>guesthousenetwork.co.uk (guest house booking)</li>
<li>ifindrooms.com (hotel / room booking)</li>
<li>ifindrooms.co.uk (hotel / room booking)</li>
<li>myweightapp.com (weight app)</li>
<li>myweightapp.co.uk (weight app)</li>
<li>webdevelopmentmanchester.com (local web development)</li>
</ul>
<p>It&#39;s difficult to price a domain, but everything is negotiable, especially to my blog readers :) Make me an offer.</p>
<p>Most of the domain names are hotel booking based, iFindRooms would also make a pretty good app name.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/web/" term="web"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Functional First, Last, Every(thing)]]></title>
    <link href="http://ilee.co.uk/functional-first-last-everything/"/>
    <id>http://ilee.co.uk/functional-first-last-everything/</id>
    <published>2013-09-02T10:40:32.000Z</published>
    <updated>2013-09-02T16:13:29.000Z</updated>
    <content type="html"><![CDATA[<h2>functional.js (λ)</h2>
<p>functional.js is a functional JavaScript library I&#39;m (still) writing. It facilitates <a href="http://en.wikipedia.org/wiki/Currying" target="_blank">currying</a> and <a href="http://en.wikipedia.org/wiki/Tacit_programming" target="_blank">point-free / tacit</a> programming in JavaScript.</p>
<p>I&#39;ve added many new features since my <a href="/functional-javascript-library">last post on this</a> and I‘ve also started on some array functions. These array functions aren’t specifically unique, but they‘re handy and we can’t really do without them. As always, everything can be curried. (curryable?).</p>
<h2>Examples</h2>
<h3>You&#39;re the λ.first</h3>
<figure class="highlight lang-javascript"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="code"><pre><span class="keyword">var</span> items = [<span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>];

<span class="keyword">var</span> even = <span class="function"><span class="keyword">function</span> <span class="params">(item)</span> {</span>
    <span class="keyword">return</span> item % <span class="number">2</span> === <span class="number">0</span>;
};
<span class="keyword">var</span> odd = <span class="function"><span class="keyword">function</span> <span class="params">(item)</span> {</span>
    <span class="keyword">return</span> item % <span class="number">2</span> !== <span class="number">0</span>;
};

<span class="keyword">var</span> firstEven = λ.first(even);
<span class="keyword">var</span> firstOdd = λ.first(odd);

expect(firstEven(items)).toEqual(<span class="number">2</span>);
expect(firstOdd(items)).toEqual(<span class="number">1</span>);
</pre></td></tr></table></figure>

<h3>My λ.last</h3>
<figure class="highlight lang-javascript"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="code"><pre><span class="keyword">var</span> items = [<span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>];

<span class="keyword">var</span> even = <span class="function"><span class="keyword">function</span> <span class="params">(item)</span> {</span>
    <span class="keyword">return</span> item % <span class="number">2</span> === <span class="number">0</span>;
};
<span class="keyword">var</span> odd = <span class="function"><span class="keyword">function</span> <span class="params">(item)</span> {</span>
    <span class="keyword">return</span> item % <span class="number">2</span> !== <span class="number">0</span>;
};

<span class="keyword">var</span> lastEven = λ.last(even);
<span class="keyword">var</span> lastOdd = λ.last(odd);

expect(lastEven(items)).toEqual(<span class="number">2</span>);
expect(lastOdd(items)).toEqual(<span class="number">1</span>);
</pre></td></tr></table></figure>

<h3>My λ.every(thing)</h3>
<figure class="highlight lang-javascript"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="code"><pre><span class="keyword">var</span> items = [<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>];

<span class="keyword">var</span> even = <span class="function"><span class="keyword">function</span> <span class="params">(item)</span> {</span>
    <span class="keyword">return</span> item % <span class="number">2</span> === <span class="number">0</span>;
};
<span class="keyword">var</span> odd = <span class="function"><span class="keyword">function</span> <span class="params">(item)</span> {</span>
    <span class="keyword">return</span> item % <span class="number">2</span> !== <span class="number">0</span>;
};

<span class="keyword">var</span> everyEven = λ.every(even);
<span class="keyword">var</span> everyOdd = λ.every(odd);

expect(everyEven(items)).toEqual(<span class="literal">true</span>);
expect(everyOdd(items)).toEqual(<span class="literal">false</span>);
</pre></td></tr></table></figure>

<p>The actual code needs some performance enhancements (such as breaking out of loops, and possibly making asynchronous?).</p>
<h3>λ.partition</h3>
<p>If you want to look at something a little more unique, take a look at my partition function, which has also been added recently.</p>
<figure class="highlight lang-javascript"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre><span class="keyword">var</span> items = [<span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>];

<span class="keyword">var</span> even = <span class="function"><span class="keyword">function</span> <span class="params">(item)</span> {</span>
    <span class="keyword">return</span> item % <span class="number">2</span> === <span class="number">0</span>;
};

<span class="keyword">var</span> partitionEven = λ.partition(even);

<span class="keyword">var</span> result = partitionEven(items);

expect(result).toEqual([[<span class="number">6</span>, <span class="number">4</span>, <span class="number">2</span>], [<span class="number">7</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">1</span>]]);
</pre></td></tr></table></figure>


<h2>Contribute, Contribute, Contribute</h2>
<p>functional.js is starting to be used by people :| (based on downloads and npm downloads anyway) and if you want to contribute there&#39;s plenty TODO. All the code is on <a href="https://github.com/leecrossley/functional-js" target="_blank">GitHub</a>.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/javascript/" term="javascript"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Plugin Registry for Cordova/PhoneGap]]></title>
    <link href="http://ilee.co.uk/plugin-registry-for-cordova-phonegap/"/>
    <id>http://ilee.co.uk/plugin-registry-for-cordova-phonegap/</id>
    <published>2013-08-30T17:39:42.000Z</published>
    <updated>2013-08-30T18:11:04.000Z</updated>
    <content type="html"><![CDATA[<h2>The PhoneGap-Gap</h2>
<p>Having a central registry or repository for all Cordova / PhoneGap plugins (both core and 3rd party) seems like an obvious thing to have. Unfortunately, no-one had <em>actually done it</em>.</p>
<p>As a Cordova developer, I did often wonder while writing a plugin if someone else had already written one.</p>
<blockquote>&quot;<strong>If only there was a place I could search for plugins and instantly find out what platforms and engines they support.</strong>&quot;</blockquote>

<h2>Making dreams come true</h2>
<p>Failing that, a Plugin Registry for Cordova / PhoneGap. That&#39;s right, <em>I&#39;ve done it</em>, hence there not being a blog post for a couple of days. Busy busy busy.</p>
<h3><a href="http://www.plugreg.com" target="_blank">PlugReg</a></h3>
<p>PlugReg is written using nodejs, of course. Here are some of the preliminary features that have been implemented:</p>
<ul>
<li><strong>Submit</strong>. Submit plugins automagically with a GitHub url</li>
<li><strong>Search</strong>. Search on plugin name and keywords</li>
<li><strong>Authors List</strong>. List of all plugin authors, with how many plugins and a total count</li>
<li><strong>Author Page</strong>. List of all plugins by an author (and avatar), and a link to their GitHub</li>
<li><strong>Plugins List</strong>. List of all plugins and a total count</li>
<li><strong>Plugin Details</strong>. Details such as plugin description, supported platforms, engines, keyword tags, link to GitHub and installation instructions</li>
<li><strong>Latest Plugins</strong>. List of the latest plugins added</li>
</ul>
<h2>Suggestions, comments and feedback</h2>
<p>All welcome, one thing I&#39;m wondering if might be helpful for the site is user ratings and possibly user comments? What do you guys think?</p>
<p>Please add your own plugins or any plugins you have used.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/phonegap/" term="phonegap"/>
    <category scheme="http://ilee.co.uk/tags/iphone/" term="iphone"/>
    <category scheme="http://ilee.co.uk/tags/android/" term="android"/>
    <category scheme="http://ilee.co.uk/tags/web/" term="web"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Are Your Apps Ready for iOS 7?]]></title>
    <link href="http://ilee.co.uk/are-your-apps-ready-for-ios-7/"/>
    <id>http://ilee.co.uk/are-your-apps-ready-for-ios-7/</id>
    <published>2013-08-27T15:20:31.000Z</published>
    <updated>2013-08-27T15:52:31.000Z</updated>
    <content type="html"><![CDATA[<h2>iOS 7 is coming</h2>
<p>The latest rumour is the 10th of September, in any case, it‘s coming, get your apps ready now if you haven’t already. Don&#39;t ignore this advice, devices running iOS7 running apps that were built for iOS6 (or earlier!) will stick out like a sore thumb.</p>
<h2>What&#39;s changing</h2>
<h3>The user interface</h3>
<p>One of the main changes is the look and feel and Apple want you to reflect these new guidelines in your apps. - The <a href="https://developer.apple.com/library/prerelease/ios/documentation/UserExperience/Conceptual/TransitionGuide/index.html" target="_blank">iOS 7 UI Transition Guide</a> (Apple login required) explains this in detail but it impacts textures, gradients, shadows, fonts, colours, navigation, buttons, arrows, keyboards, gauges, icons, actually, EVERYTHING.</p>
<h3>New APIs</h3>
<p>It&#39;s not just all fluff. There are many changes coming to APIs, including:</p>
<ul>
<li>Multitasking</li>
<li>UIKit</li>
<li>AirDrop</li>
<li>Sprite Kit</li>
<li>Video</li>
<li>Game Center</li>
<li>Maps</li>
</ul>
<p>There will undoubtedly be better ways to do things that your app already does. Multitasking is going to be key.</p>
<p>Who knows, there might even be <a href="/iphone-fingerprint-recognition-for-developers/">Fingerprint recognition</a>.</p>
<h2>The upshot</h2>
<p>In order for your existing apps to run properly and effectively on iOS 7, your code is likely to need changes. In some cases these changes could be extensive, depending on the complexity of the app.</p>
<p>If you don‘t upgrade your app, it’ll be 100x worse than when we made the upgrade to retina images or to the slightly larger 4&quot; screen on the iPhone 5.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/iphone/" term="iphone"/>
    <category scheme="http://ilee.co.uk/tags/app/" term="app"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Social Message Plugin for Cordova 3.0]]></title>
    <link href="http://ilee.co.uk/social-message-plugin-for-cordova-30/"/>
    <id>http://ilee.co.uk/social-message-plugin-for-cordova-30/</id>
    <published>2013-08-26T15:34:51.000Z</published>
    <updated>2013-10-17T14:54:53.000Z</updated>
    <content type="html"><![CDATA[<h2>The old Social Message plugin</h2>
<p>Almost a year ago, I wrote an open source plugin for PhoneGap / Cordova. The plugin allowed PhoneGap developers to easily post messages from their app to services like Facebook and Twitter utilising the native share features.</p>
<p>The plugin bridged functionality between PhoneGap / Cordova‘s UIWebView and the native iOS application. It was composed of a single JavaScript interface and a native objective-c implementation but didn’t follow any <em>strict</em> standards.</p>
<h2>New plugin architecture</h2>
<p>If you‘re a developer for PhoneGap / Cordova, you’ve probably noticed that with the version 3.0 CLI installing plugins is <strong>really easy</strong>. The only drawback is that older plugins will need to be updated to work.</p>
<p>I&#39;m pleased to announce, my <a href="https://github.com/leecrossley/cordova-plugin-social-message" target="_blank">Social Message plugin</a> has been rewritten to support the “add plugin” command.</p>
<h2>Usage</h2>
<h3>1 step install</h3>
<figure class="highlight lang-bash"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>$ cordova plugin add https://github.com/leecrossley/cordova-plugin-social-message.git
</pre></td></tr></table></figure>

<p><strong>Way-hey!</strong> That&#39;s it, you are done my good friend. You <strong>do not</strong> need to reference any JavaScript, the Cordova plugin architecture will add a socialmessage object to your root automatically when you build. Good times.</p>
<h3>In your JavaScript</h3>
<p>After your deviceready event has been fired, you can simply pass a message object with a “text” property to the send function:</p>
<figure class="highlight lang-javascript"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre><span class="keyword">var</span> message = {
    text: <span class="string">"This is a test message"</span>
};
window.socialmessage.send(message);
</pre></td></tr></table></figure>

<p>The above code will allow the message to be shared with all built in activity types. If you want to specify activity types to include, add an “activityTypes” array to your message object:</p>
<figure class="highlight lang-javascript"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="keyword">var</span> message = {
    text: <span class="string">"This is a test message"</span>,
    activityTypes: [<span class="string">"PostToFacebook"</span>, <span class="string">"PostToTwitter"</span>]
};
window.socialmessage.send(message);
</pre></td></tr></table></figure>

<p>This example will allow the user to only post the message to Facebook or Twitter.</p>
<p>A complete list of activity types can be found <a href="http://developer.apple.com/library/ios/#documentation/UIKit/Reference/UIActivity_Class/Reference/Reference.html#//apple_ref/occ/cl/UIActivity" target="_blank">here</a>. You should omit the “UIActivityType” prefix when adding to your array.</p>
<h2>Platform support</h2>
<p>The plugin is currently only implemented for iOS but I&#39;m working on Android and Windows Phone 8 support, based on my old plugin and using the new standard.</p>
<h2>Just a thought…</h2>
<p>Wouldn&#39;t it be great if there was some kind of plugin registry like node package manager… <em><a href="http://www.plugreg.com" target="_blank">cough</a></em></p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/phonegap/" term="phonegap"/>
    <category scheme="http://ilee.co.uk/tags/iphone/" term="iphone"/>
    <category scheme="http://ilee.co.uk/tags/javascript/" term="javascript"/>
  </entry>
</feed>
