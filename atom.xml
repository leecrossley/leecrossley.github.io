<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[iLee]]></title>
  <subtitle><![CDATA[I write code that sounds awesome and music that's bug free]]></subtitle>
  <link href="http://ilee.co.uk/atom.xml" rel="self"/>
  <link href="http://ilee.co.uk"/>
  <updated>2014-07-25T07:21:22.734Z</updated>
  <id>http://ilee.co.uk/</id>
  <author>
    <name><![CDATA[Lee Crossley]]></name>
    <email><![CDATA[leee@hotmail.co.uk]]></email>
  </author>
  <entry>
    <title type="html"><![CDATA[Target Android Phones Not Tablets]]></title>
    <link href="http://ilee.co.uk/Target-Android-Phones-Not-Tablets/"/>
    <id>http://ilee.co.uk/Target-Android-Phones-Not-Tablets/</id>
    <published>2014-07-22T07:16:09.000Z</published>
    <updated>2014-07-22T07:35:46.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Screen_size_and_density">Screen size and density</h2>
<p>Android devices come in a vast array of different screen sizes and screen densities. This makes it tricky to say “this app should only be available to phones” on the Google Play store.</p>
<p>Here is the most <em>concise</em> way I can find to achieve the desired result. Include the <code>&lt;compatible-screens&gt;</code> element in the <code>AndroidManifest.xml</code> file like this (my original gist <a href="https://gist.github.com/leecrossley/b8e4ef90e51581353110" target="_blank" rel="external">here</a>):</p>
<h3 id="AndroidManifest-xml">AndroidManifest.xml</h3>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">manifest</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">compatible-screens</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="title">screen</span> <span class="attribute">android:screenSize</span>=<span class="value">"small"</span> <span class="attribute">android:screenDensity</span>=<span class="value">"ldpi"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="title">screen</span> <span class="attribute">android:screenSize</span>=<span class="value">"small"</span> <span class="attribute">android:screenDensity</span>=<span class="value">"mdpi"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="title">screen</span> <span class="attribute">android:screenSize</span>=<span class="value">"small"</span> <span class="attribute">android:screenDensity</span>=<span class="value">"hdpi"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="title">screen</span> <span class="attribute">android:screenSize</span>=<span class="value">"small"</span> <span class="attribute">android:screenDensity</span>=<span class="value">"xhdpi"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="title">screen</span> <span class="attribute">android:screenSize</span>=<span class="value">"small"</span> <span class="attribute">android:screenDensity</span>=<span class="value">"480"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="title">screen</span> <span class="attribute">android:screenSize</span>=<span class="value">"normal"</span> <span class="attribute">android:screenDensity</span>=<span class="value">"ldpi"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="title">screen</span> <span class="attribute">android:screenSize</span>=<span class="value">"normal"</span> <span class="attribute">android:screenDensity</span>=<span class="value">"mdpi"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="title">screen</span> <span class="attribute">android:screenSize</span>=<span class="value">"normal"</span> <span class="attribute">android:screenDensity</span>=<span class="value">"hdpi"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="title">screen</span> <span class="attribute">android:screenSize</span>=<span class="value">"normal"</span> <span class="attribute">android:screenDensity</span>=<span class="value">"xhdpi"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="title">screen</span> <span class="attribute">android:screenSize</span>=<span class="value">"normal"</span> <span class="attribute">android:screenDensity</span>=<span class="value">"480"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="title">compatible-screens</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- ... --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">application</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- ... --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">application</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">manifest</span>&gt;</span></div></pre></td></tr></table></figure>

<h2 id="480_vs_xxhdpi">480 vs xxhdpi</h2>
<p>The <code>android:screenDensity=&quot;480&quot;</code> can also be written as <code>android:screenDensity=&quot;xxhdpi&quot;</code> but depending on the min SDK version you are targeting, the <code>xxhdpi</code> may be unrecognised and cause a build failure. Fortunately, <code>480</code> has the same result because the standard quantised dpi for <code>xxhdpi</code> is 480.</p>
<h2 id="xxxhdpi">xxxhdpi</h2>
<p>I’ve seen <code>xxxhdpi</code> in the Android source but I’ve not seen a phone with the capability yet. I imagine this will have a standard quantised dpi of 640, so you will able to use this similar trick in future.</p>
<p>Now all you have to do is create the 100s of assets you need to actually support these screen densities.</p>
<p><strong>What’s next? CastlemaineHDPI? (XXXX).</strong></p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/android/" term="android"/>
    <category scheme="http://ilee.co.uk/tags/app/" term="app"/>
    <category scheme="http://ilee.co.uk/tags/phonegap/" term="phonegap"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Sign Releases with Cordova Android]]></title>
    <link href="http://ilee.co.uk/Sign-Releases-with-Cordova-Android/"/>
    <id>http://ilee.co.uk/Sign-Releases-with-Cordova-Android/</id>
    <published>2014-07-21T06:33:15.000Z</published>
    <updated>2014-07-21T07:17:09.000Z</updated>
    <content type="html"><![CDATA[<h2 id="The_Cordova_CLI">The Cordova CLI</h2>
<p>Since the Cordova CLI was introduced about a year ago, building and deploying Cordova apps for development has become incredibly simple and automatable. E.g. for Android:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cordova build android</div></pre></td></tr></table></figure>

<p>and you can also run the app directly on the device / emulator</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cordova run android</div><div class="line">$ cordova emulate android</div></pre></td></tr></table></figure>

<p>If you want to build a release version of an APK from the command line for production, this is also possible. However, this does not <em>sign</em> your release:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cordova build android --release</div></pre></td></tr></table></figure>

<p>Here are the 2 methods I use / have used to achieve API signing for production / distribution. Don’t worry, neither of them use Eclipse!:</p>
<p><img src="/img/android-signing.png" alt="Android signing"></p>
<p><strong>Note:</strong> Before you can use either of these methods, you must have generated a private key, see <a href="http://developer.android.com/tools/publishing/app-signing.html#cert" target="_blank" rel="external">Obtain a suitable private key</a> on the Android Developer website.</p>
<h2 id="Method_1">Method 1</h2>
<h3 id="Use_jarsigner_directly">Use jarsigner directly</h3>
<p>This is the method I used to use and it isn’t Cordova CLI specific (it’s part of the Java SDK build tools and this method is part of their <a href="http://developer.android.com/tools/publishing/app-signing.html#signapp" target="_blank" rel="external">standard documentation</a>). After you have created your APK (<code>cordova build android --release</code>) you can run the following command:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ jarsigner -<span class="keyword">verbose</span> -sigalg SHA1withRSA -digestalg SHA1 -keystore release_key_name.keystore app_name.apk alias_name</div></pre></td></tr></table></figure>

<p>Jarsigner will prompt for the password and sign the APK.</p>
<h2 id="Method_2_(best)">Method 2 (best)</h2>
<h3 id="Part_of_the_CLI_workflow">Part of the CLI workflow</h3>
<p>This is now my preferred method and hooks directly into the <code>cordova build android --release</code> command.</p>
<p>Create an <code>ant.properties</code> file in <code>platforms/android/</code> with a keystore path and alias name:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">key.store=/path/to/keystore/release_key_name.keystore</div><div class="line">key.alias=alias_name</div></pre></td></tr></table></figure>

<p>The standard Cordova CLI release build process will now prompt for the password and automatically sign the APK, ready for upload to Google Play, or other distribution method. The APK will be created at <code>platforms/android/ant-build/app_name-release.apk</code>.</p>
<p>Happy release automation.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/android/" term="android"/>
    <category scheme="http://ilee.co.uk/tags/app/" term="app"/>
    <category scheme="http://ilee.co.uk/tags/phonegap/" term="phonegap"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Cordova / PhoneGap iOS 8 Beta]]></title>
    <link href="http://ilee.co.uk/Cordova-PhoneGap-iOS-8-Beta/"/>
    <id>http://ilee.co.uk/Cordova-PhoneGap-iOS-8-Beta/</id>
    <published>2014-06-10T11:39:51.000Z</published>
    <updated>2014-06-10T12:08:57.000Z</updated>
    <content type="html"><![CDATA[<h2 id="iOS_8_Beta_and_Cordova_&lt;=_3-5-0">iOS 8 Beta and Cordova &lt;= 3.5.0</h2>
<p>If you’ve had a play around with iOS 8 beta (<a href="http://ilee.co.uk/touch-id-with-cordova-phonegap/" target="_blank" rel="external">like me</a>), you’ll probably have noticed there’s <em>an issue</em>.</p>
<p><img src="/img/cordova-ios8.png" alt="Cordova / PhoneGap iOS 8"></p>
<h2 id="WebKit_iOS_8">WebKit iOS 8</h2>
<p>If you take a look at the <a href="https://developer.apple.com/library/prerelease/ios/releasenotes/General/RN-iOSSDK-8.0/index.html" target="_blank" rel="external">WebKit iOS 8 release notes</a> you’ll see it makes specific mention of Cordova / PhoneGap:</p>
<blockquote><strong>Applications that use Apache Cordova / PhoneGap are broken due to a bug that causes the window.navigator.userAgent object to become undefined when window.navigator is replaced by a pure JavaScript wrapper object.</strong></blockquote>

<p>Essentially, what happens is Cordova / PhoneGap replaces the <code>window.navigator</code>, as you can see <a href="https://github.com/apache/cordova-js/blob/2c375dd4f585b3fb29ff67ec455918c3a333fc7a/src/common/init.js#L64" target="_blank" rel="external">here</a>.</p>
<h2 id="The_solution">The solution</h2>
<p>Although this will be fixed in Cordova 3.6.0 when support for the new Cordova bridge under iOS 8 WKWebView is implemented, Eddy Verbruggen has come up with a <a href="https://gist.github.com/EddyVerbruggen/cd02c73162180793513e#file-ios8-beta-phonegap-fix" target="_blank" rel="external">neat little fix</a> to check if the <code>navigator.userAgent</code> is undefined and assign a return value to it:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (navigator.userAgent === <span class="literal">undefined</span>) {</div><div class="line">    navigator.__defineGetter__(<span class="string">'userAgent'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>{</div><div class="line">        <span class="keyword">return</span>(<span class="string">"Mozilla/5.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit"</span>);</div><div class="line">    });</div><div class="line">}</div></pre></td></tr></table></figure>

<p>Also, targeting 7.0 (which I doubt you’re doing if you’re playing with iOS 8 beta) should also still work.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/iphone/" term="iphone"/>
    <category scheme="http://ilee.co.uk/tags/app/" term="app"/>
    <category scheme="http://ilee.co.uk/tags/phonegap/" term="phonegap"/>
    <category scheme="http://ilee.co.uk/tags/javascript/" term="javascript"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Touch ID with Cordova / PhoneGap]]></title>
    <link href="http://ilee.co.uk/touch-id-with-cordova-phonegap/"/>
    <id>http://ilee.co.uk/touch-id-with-cordova-phonegap/</id>
    <published>2014-06-03T12:35:46.000Z</published>
    <updated>2014-06-03T13:19:41.000Z</updated>
    <content type="html"><![CDATA[<h2 id="iPhone_fingerprint_recognition">iPhone fingerprint recognition</h2>
<p>In August 2013 (before Touch ID or the iPhone 5s were released) I wrote a <a href="http://ilee.co.uk/iphone-fingerprint-recognition-for-developers/" target="_blank" rel="external">blog post</a> guessing that the hardware and software capabilities of fingerprint recognition could be just around the corner and might become available to app developers.</p>
<p>Apple, to much disappointment, kept the API private with iOS 7 but <strong>this has all changed with the (beta) release of iOS 8</strong>. Now, <a href="https://www.youtube.com/watch?v=Cf_qfX9cKsQ" target="_blank" rel="external">you got the touch</a>…</p>
<h2 id="The_local_authentication_framework">The local authentication framework</h2>
<p>The moment Xcode 6 beta had finished downloading, the first thing I did was create a dummy project with the newly available “Local Authentication” framework. It took me <em>quite some time</em> to realise that adding the reference (either <code>#import &lt;LocalAuthentication/LocalAuthentication.h&gt;</code> or as a module <code>@import LocalAuthentication</code>) broke the build if you don’t target a real device (learn from me here and save yourself some time!).</p>
<h2 id="Cordova_/_PhoneGap_plugin">Cordova / PhoneGap plugin</h2>
<p>The next logical step for me was to create a plugin from my test code, so that I could launch Touch ID authentication right from within my JavaScript.</p>
<p>The plugin is now in beta release (as is the API and subject to change etc). I have added this to <a href="http://plugreg.com/plugin/leecrossley/cordova-plugin-touchid" target="_blank" rel="external">plugreg</a> and you can also view the full source code on <a href="https://github.com/leecrossley/cordova-plugin-touchid" target="_blank" rel="external">Github</a>.</p>
<h2 id="Add_the_plugin_with_the_CLI">Add the plugin with the CLI</h2>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cordova plugin <span class="built_in">add</span> http<span class="variable">s:</span>//github.<span class="keyword">com</span>/leecrossley/cordova-plugin-touchid.git</div></pre></td></tr></table></figure>

<h2 id="Using_the_plugin">Using the plugin</h2>
<p>Ensure you use the plugin after your deviceready event has been fired and you are targeting a real device.</p>
<h3 id="touchid-authenticate()">touchid.authenticate()</h3>
<p>Pass the following arguments to the <code>authenticate()</code> function, to prompt the user to authenticate via TouchID:</p>
<ol>
<li>Success callback (called on successful authentication)</li>
<li>Failure callback (called on error or if authentication fails)</li>
<li>Localised text explaining why the app needs authentication. This should be localised and provide a clear reason for why you are requesting that the user performs the authentication, and what action you will be taking.</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.touchid.authenticate(successCallback, failureCallback, <span class="string">"text"</span>);</div></pre></td></tr></table></figure>

<h3 id="touchid-checkSupport()">touchid.checkSupport()</h3>
<p>Although the <code>authenticate()</code> function will return an error if the user is unable to authenticate via Touch ID, you may wish to check support without prompting the user to authenticate. This can be done by passing following arguments to the <code>checkSupport()</code> function:</p>
<ol>
<li>Success callback (called if authentication is possible)</li>
<li>Not supported callback (called if policy can not be evaluated, with error message)</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.touchid.checkSupport(successCallback, notSupportedCallback);</div></pre></td></tr></table></figure>

<h3 id="Improvements?">Improvements?</h3>
<p>Probably. Issues and pull request on the <a href="https://github.com/leecrossley/cordova-plugin-touchide" target="_blank" rel="external">git repo</a> please. Remember this is still beta.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/iphone/" term="iphone"/>
    <category scheme="http://ilee.co.uk/tags/app/" term="app"/>
    <category scheme="http://ilee.co.uk/tags/phonegap/" term="phonegap"/>
    <category scheme="http://ilee.co.uk/tags/javascript/" term="javascript"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Adds - Addition Puzzle Game]]></title>
    <link href="http://ilee.co.uk/adds-addition-puzzle-game/"/>
    <id>http://ilee.co.uk/adds-addition-puzzle-game/</id>
    <published>2014-05-07T13:34:22.000Z</published>
    <updated>2014-06-17T07:08:43.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://playadds.com" target="_blank" rel="external">Adds</a> is a simple mobile and tablet game, created by myself with Cordova / PhoneGap. It’s been several months in development and I have been sharing most of my experiences as I’ve been going along, but I think it’s time to <em>sum up</em>.</p>
<p>Yesterday, I finally released version 1. The app landing (promo) page can be found <a href="http://playadds.com" target="_blank" rel="external">here</a>.</p>
<p><img src="http://playadds.com/images/iphone.png" alt="iPhone teaser"></p>
<h2 id="The_concept">The concept</h2>
<p>To play, you swipe over numbers in a grid to add up to a total at the top. It’s very easy to play, but difficult to master.</p>
<p>You can swipe in any combination of directions (up, down, left or right) but you can’t go back on yourself (use the same number twice) or move diagonally.</p>
<p>It was tricky to implement the main game grid in JavaScript (especially with the touch interactions) but now, it’s exceptionally stable, testable and portable. I wrote about some of the early logic <a href="http://ilee.co.uk/get-adjacent-squares-on-a-grid/" target="_blank" rel="external">here</a> last November.</p>
<h2 id="The_game">The game</h2>
<p>The game is broken up into 3 main sections:</p>
<h3 id="1-_Endless_play">1. Endless play</h3>
<p>This is where players battle it out to reach the highest score and the sky is the limit! The core concept is that you start off with 10 seconds on the clock and for each number in your answer, you gain a point and an extra second.</p>
<p>There are 3 different difficulty modes available for selection, Easy, Medium and Hard. You must score 50 or more in Easy mode to unlock Medium and 50 or more in Medium to unlock Hard. There are no in app purchases to shortcut this. The difference between these difficulties is the grid size. Easy is a 3x3 grid, Medium 4x4 and Hard 5x5.</p>
<p>What people might not realise about the endless mode is that all the difficulties do get progressively harder (every 50 points you score to be exact). What I mean by harder this time is both the numbers in the grid and the totals get bigger.</p>
<p>The trick is to store up as much time right at the start and pass if it’s not immediately obvious.</p>
<h3 id="2-_Levels">2. Levels</h3>
<p>There are currently 15 unique levels. 5 branded “Cadet”, 5 branded “Lieutenant” and 5 branded “Captain”. All Cadet levels are on a 3x3 grid, Lieutenant 4x4 and Captain 5x5.</p>
<p>Each level has it’s own “theme”, such as only odd numbers on the grid or even negative numbers… but I don’t want to spoil too much for you :)</p>
<p>The levels start off easy and get progressively harder. 3-5 (the fifth Captain level) is exceptionally hard and I have only completed it once myself! Although you will be satisfied with the gratification of beating level 3-5, you are also rewarded by having the time trial mode unlocked for free.</p>
<h3 id="3-_Time_trial_mode">3. Time trial mode</h3>
<p>Accessible after completion of all 15 levels, or via in app purchase, time trial mode does exactly what it says on the tin. Choose your grid size (3x3, 4x4, 5x5) and your duration (90s or 180s) and you’re off.</p>
<h2 id="Hints_and_tips">Hints and tips</h2>
<ul>
<li><p><strong>Remember to pass</strong>. Don’t waste time if a solution isn’t immediately obvious. You do lose a point for passing, but it’s worth it in time gained. There’s also a “Gold Pass” in app purchase that allows you to pass without ever losing a point.</p>
</li>
<li><p><strong>Use the smallest numbers</strong>. You get a point for every number in your answer, so it makes sense to use the longest answer (most numbers).</p>
</li>
<li><p><strong>Don’t guess</strong>. Five wrong guesses in a row will lose you 5 points. Epic fail.</p>
</li>
</ul>
<h2 id="Leaderboards">Leaderboards</h2>
<p>There’s a leaderboard for everything. I didn’t want simply passing a level to be enough, I wanted players to complete to see how fast they could complete a level. Thanks to my <a href="http://ilee.co.uk/using-game-center-with-phonegap/" target="_blank" rel="external">game center plugin</a> friends and family can compare scores and times. They can also battle against everyone else in the world.</p>
<h2 id="Platforms">Platforms</h2>
<p>The game is currently optimised for iOS 7 devices (iPhone, iPod touch and iPad). Thanks to Cordova / PhoneGap and the way I have developed it, it’s considerably easier to port to other platforms, such as Android and WP8. This is currently a work in progress dependant on demand.</p>
<h3 id="Device_sizes">Device sizes</h3>
<p>There were several different screen sizes to consider while developing the interface, such as the shorter iPhone 4 screen (320×480 or 640×960 retina), the taller iPhone 5 resolution (640×1136) and of course the various iPads. I wanted to ensure I used exactly the same code for each.</p>
<p>By utilising clever media queries and base font sizes, I was able to adjust sizes relatively easily keeping the same game play. I still had to create the million splash screens and icons though :). Essentially, the numbers grid itself is 1.5x bigger on tablets and things become a little more spaced out. The flip <a href="http://ilee.co.uk/native-page-transitions-with-phonegap/" target="_blank" rel="external">transitions</a> are omitted from tablets (replaced with a quick quick fade), as they just didn’t feel right on the larger screen, even the iPad mini.</p>
<h2 id="Plugins">Plugins</h2>
<p>Naturally, I’ve had to use/write some Cordova plugins to achieve the games required functionality, here’s a list (excluding any core plugins):</p>
<ul>
<li><a href="https://github.com/leecrossley/cordova-plugin-game-center" target="_blank" rel="external">Game Center</a></li>
<li><a href="https://github.com/leecrossley/cordova-plugin-native-transitions" target="_blank" rel="external">Native Transitions</a></li>
<li><a href="https://github.com/leecrossley/cordova-plugin-social-message" target="_blank" rel="external">Social Message</a></li>
<li>In App Purchase</li>
<li>Google Analytics</li>
<li>Status Bar</li>
</ul>
<h2 id="Frameworks">Frameworks</h2>
<p>None. No CSS/UI frameworks. No JavaScript frameworks.</p>
<p>I refuse to use frameworks, it’s the best way to create a fluid, light weight, performant app.</p>
<h2 id="Number_puzzle_games">Number puzzle games</h2>
<p>There has been a increase in number based puzzle games recently, such as “Threes” and “2048”.</p>
<p>I actually started the development for <a href="https://itunes.apple.com/gb/app/adds/id742044838" target="_blank" rel="external">Adds</a> back in October 2013 and I’m hoping to follow in similar footsteps to other number games released during my development. I do believe that my app is unique in its approach and not just another “numbers on a grid” game.</p>
<h2 id="Final_notes">Final notes</h2>
<p>I hope you enjoy my little game and become an add-ict too. I can now add like a boss.</p>
<p>If you’re a developer and want a free promo code because you don’t want to pay the 69p, I have a couple left - DM me on twitter.</p>
<p>Please send your feedback to me, it’s the only way I can improve, even if I bite your head off and go defensive :)</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/app/" term="app"/>
    <category scheme="http://ilee.co.uk/tags/phonegap/" term="phonegap"/>
    <category scheme="http://ilee.co.uk/tags/design/" term="design"/>
    <category scheme="http://ilee.co.uk/tags/iphone/" term="iphone"/>
    <category scheme="http://ilee.co.uk/tags/javascript/" term="javascript"/>
    <category scheme="http://ilee.co.uk/tags/html/" term="html"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[CSS translate3d Performance Hack]]></title>
    <link href="http://ilee.co.uk/css-translate3d-performance-hack/"/>
    <id>http://ilee.co.uk/css-translate3d-performance-hack/</id>
    <published>2014-04-28T07:10:13.000Z</published>
    <updated>2014-06-22T13:55:41.000Z</updated>
    <content type="html"><![CDATA[<h2 id="CSS_transition_performance">CSS transition performance</h2>
<p>When I started out developing apps with Cordova / PhoneGap, there were several performance hacks I used to help CSS animations become smoother, i.e. force GPU acceleration.</p>
<h3 id="The_CSS_transform_hacks">The CSS transform hacks</h3>
<p>Depending on the scenario, I’d usually adopt one of the following (and I’d be careful about which elements they were applied to):</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="class">.class</span> <span class="rules">{</span></div><div class="line">    <span class="rule"><span class="attribute">-webkit-backface-visibility</span>:<span class="value"> hidden</span></span>;</div><div class="line">    <span class="rule"><span class="attribute">-webkit-perspective</span>:<span class="value"> <span class="number">1000</span></span></span>;</div><div class="line"></div><div class="line">    <span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"> <span class="function">translate3d</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span></span>;</div><div class="line">    <span class="comment">/* or */</span></div><div class="line">    <span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"> <span class="function">translateZ</span>(<span class="number">0</span>)</span></span>;</div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>



<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="class">.class</span> <span class="rules">{</span></div><div class="line">    <span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"> <span class="function">rotateZ</span>(<span class="number">360deg</span>)</span></span>;</div><div class="line">    <span class="comment">/* yep, this worked for me in the past! */</span></div><div class="line"><span class="rule">}</span></div></pre></td></tr></table></figure>

<h3 id="Memory_allocation">Memory allocation</h3>
<p>These hacks were never a hard and fast rule, and as developers don’t have control over browser memory, it was easy to create memory issues.</p>
<h2 id="Beware">Beware</h2>
<p>After applying various permutations of these hacks to a game I’m developing with Cordova / PhoneGap, it appears that even using the hacks sparingly and with caution, the performance of the transitions are degraded.</p>
<p>Transitions are jerkier than without the hacks and it hits the performance of the native code when used in parallel (e.g. <a href="https://github.com/leecrossley/cordova-plugin-native-transitions" target="_blank" rel="external">native transitions</a>). It also forces font rendering to GPU control instead of the operating system rendering scheme, making text appear slightly pixellated on occasion.</p>
<h3 id="Conclusion">Conclusion</h3>
<p>In my opinion, with well developed apps and the latest browsers / hardware, these hacks are now redundant (and are likely to make things worse). The chances are, you probably don’t need to use them anymore.</p>
<p>To combat performance issues, you should look at other contributing factors, like the number of elements and use of intensive styles, such as box shadow.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/web/" term="web"/>
    <category scheme="http://ilee.co.uk/tags/phonegap/" term="phonegap"/>
    <category scheme="http://ilee.co.uk/tags/hack/" term="hack"/>
    <category scheme="http://ilee.co.uk/tags/iphone/" term="iphone"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[dotject Atom Text Editor Plugin]]></title>
    <link href="http://ilee.co.uk/dotject-atom-text-editor-plugin/"/>
    <id>http://ilee.co.uk/dotject-atom-text-editor-plugin/</id>
    <published>2014-04-23T07:08:24.000Z</published>
    <updated>2014-04-23T08:01:01.000Z</updated>
    <content type="html"><![CDATA[<h2 id="dotject">dotject</h2>
<p>After <a href="http://ilee.co.uk/dotject-quick-js-object-composition/" target="_blank" rel="external">yesterday’s post</a> about <a href="https://github.com/leecrossley/dotject" target="_blank" rel="external">dotject</a>, it quickly became apparent that although some people may find it useful, they wanted the dotject functionality to be part of an IDE. This was always my intention and it’s now available as an <a href="https://atom.io/packages/dotject" target="_blank" rel="external">Atom plugin</a>.</p>
<h2 id="Atom">Atom</h2>
<p>Titled as “a hackable text editor for the 21st Century”, GitHub’s <a href="https://atom.io/" target="_blank" rel="external">Atom</a> has created some controversy about being a <em>closed-source open-source</em> text editor (yes you read that right). Although the core isn’t open source, developers have the ability to develop plugins and themes to completely change or enhance the way the editor works.</p>
<h2 id="The_Plugin">The Plugin</h2>
<p>I found it easy to create an Atom plugin for dotject, mainly due to it’s familiarity with <a href="https://www.npmjs.org/" target="_blank" rel="external">npm</a> (it also has a root package.json file etc). Under the hood, it even uses my dotject node package, so there’s no duplication of the dotject code whatsoever.</p>
<h3 id="Installation">Installation</h3>
<p>Use the Atom package manager, which can be found in the Settings view or run <code>apm install dotject</code> from the command line.</p>
<h3 id="Usage">Usage</h3>
<p>The default keymapping is <code>shift-cmd-J</code> (although this can be configured). You simply highlight your dotject string and press <code>shift-cmd-J</code> to perform the conversion.</p>
<h3 id="Example">Example</h3>
<p>Highlighting <code>a.b.c,d.e</code> then pressing <code>shift-cmd-J</code> will replace <code>a.b.c,d.e</code> with:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">{<span class="string">"a"</span>:{<span class="string">"b"</span>:{<span class="string">"c"</span>:{}}},<span class="string">"d"</span>:{<span class="string">"e"</span>:{}}}</div></pre></td></tr></table></figure>

<h3 id="The_code">The code</h3>
<p>It’s essentially 2 lines of code, with a little glue and keymapping:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// convert the current text selection</span></div><div class="line"><span class="keyword">var</span> converted = dotject(editor.getSelection().getText());</div><div class="line"><span class="comment">// insert the stringified json in place of the selection</span></div><div class="line">editor.getSelection().insertText(<span class="built_in">JSON</span>.stringify(converted));</div></pre></td></tr></table></figure>

<p>This would all be perfect, if it was not for CoffeeScript (I’ve written in JavaScript above).</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/javascript/" term="javascript"/>
    <category scheme="http://ilee.co.uk/tags/web/" term="web"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[dotject - Quick JS Object Composition]]></title>
    <link href="http://ilee.co.uk/dotject-quick-js-object-composition/"/>
    <id>http://ilee.co.uk/dotject-quick-js-object-composition/</id>
    <published>2014-04-22T07:59:29.000Z</published>
    <updated>2014-04-22T08:25:32.000Z</updated>
    <content type="html"><![CDATA[<h2 id="dotject">dotject</h2>
<p><a href="https://github.com/leecrossley/dotject" target="_blank" rel="external">dotject</a> provides a quick and simple way to compose JavaScript objects using familiar <a href="http://www.ling.helsinki.fi/kit/2009s/clt230/RUR-PLE/html/en/inter/30-dot.htm" target="_blank" rel="external">dot notation</a>.</p>
<p>The code supports object creation at n levels (nesting) along with same level objects. There’s also functionality to support (multiple) value assignment and value overriding. It might sound complicated but it’s designed to make life easier, the examples below will showcase this.</p>
<p>dotject harnesses the power of <a href="https://github.com/leecrossley/functional-js" target="_blank" rel="external">functional.js</a> and it’s λ.reduce function to achieve the “dot notation to object” implementation in very few lines of code.</p>
<h2 id="Getting_started">Getting started</h2>
<p>Install via npm:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="operator"><span class="keyword">install</span> dotject # <span class="comment">--save</span></span></div></pre></td></tr></table></figure>

<p>Require the module in the usual way:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> dotject = <span class="built_in">require</span>(<span class="string">"dotject"</span>);</div></pre></td></tr></table></figure>

<h2 id="Using_dotject">Using dotject</h2>
<p>There is a comprehensive list of programatic examples in the <a href="https://raw.githubusercontent.com/leecrossley/dotject/master/dotject-spec.js" target="_blank" rel="external">specs</a>, for the project, but I’ll run through examples here:</p>
<h3 id="Simple_object_composition">Simple object composition</h3>
<p>Separating property names with dots (like JavaScript dot notation) will create nested objects:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">dotject(<span class="string">"a.b.c"</span>);</div><div class="line"></div><div class="line">{</div><div class="line">  <span class="string">"a"</span>: {</div><div class="line">    <span class="string">"b"</span>: {</div><div class="line">      <span class="string">"c"</span>: {}</div><div class="line">    }</div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure>

<p>Separating property names with a comma (similar to JavaScript objects) will create properties at the same level:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">dotject(<span class="string">"a,b"</span>);</div><div class="line"></div><div class="line">{</div><div class="line">  <span class="string">"a"</span>: {},</div><div class="line">  <span class="string">"b"</span>: {}</div><div class="line">}</div></pre></td></tr></table></figure>

<p>This notation can be combined with the dot style notation:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">dotject(<span class="string">"a,b.c"</span>);</div><div class="line"></div><div class="line">{</div><div class="line">  <span class="string">"a"</span>: {},</div><div class="line">  <span class="string">"b"</span>: {</div><div class="line">    <span class="string">"c"</span>: {}</div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure>

<h3 id="Extend_an_existing_object">Extend an existing object</h3>
<p>Extend an existing object with new properties by passing the existing object as a second (optional) argument:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">dotject(<span class="string">"b.c"</span>, {<span class="string">"a"</span>:{}});</div><div class="line"></div><div class="line">{</div><div class="line">  <span class="string">"a"</span>: {},</div><div class="line">  <span class="string">"b"</span>: {</div><div class="line">    <span class="string">"c"</span>: {}</div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure>

<p>Existing object values are retained:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">dotject(<span class="string">"b.c"</span>, {<span class="string">"a"</span>: <span class="literal">true</span>});</div><div class="line"></div><div class="line">{</div><div class="line">  <span class="string">"a"</span>: <span class="literal">true</span>,</div><div class="line">  <span class="string">"b"</span>: {</div><div class="line">    <span class="string">"c"</span>: {}</div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure>

<p>Existing nested object properties are retained:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">dotject(<span class="string">"a.c"</span>, {<span class="string">"a"</span>:{<span class="string">"b"</span>:{}}});</div><div class="line"></div><div class="line">{</div><div class="line">  <span class="string">"a"</span>: {</div><div class="line">    <span class="string">"b"</span>: {},</div><div class="line">    <span class="string">"c"</span>: {}</div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure>

<h3 id="Assign_a_value">Assign a value</h3>
<p>You can assign a value to the last nested property:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">dotject(<span class="string">"a.b"</span>, {}, <span class="number">10</span>);</div><div class="line"></div><div class="line">{</div><div class="line">  <span class="string">"a"</span>: {</div><div class="line">    <span class="string">"b"</span>: <span class="number">10</span></div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure>

<h3 id="Assign_multiple_values">Assign multiple values</h3>
<p>You can assign a values to the last nested properties:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">dotject(<span class="string">"a,b.c,d"</span>, {}, <span class="literal">true</span>, <span class="number">10</span>, <span class="string">"test"</span>);</div><div class="line"></div><div class="line">{</div><div class="line">  <span class="string">"a"</span>: <span class="literal">true</span>,</div><div class="line">  <span class="string">"b"</span>: {</div><div class="line">    <span class="string">"c"</span>: <span class="number">10</span></div><div class="line">  },</div><div class="line">  <span class="string">"d"</span>: <span class="string">"test"</span></div><div class="line">}</div></pre></td></tr></table></figure>

<h3 id="Assign_multiple_values_and_override_existing">Assign multiple values and override existing</h3>
<p>You can assign a values to the last nested properties:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">dotject(<span class="string">"a,b"</span>, {<span class="string">"a"</span>: <span class="literal">false</span>}, <span class="literal">true</span>, <span class="string">"test"</span>)</div><div class="line"></div><div class="line">{</div><div class="line">  <span class="string">"a"</span>: <span class="literal">true</span>,</div><div class="line">  <span class="string">"b"</span>: <span class="string">"test"</span></div><div class="line">}</div></pre></td></tr></table></figure>

<h2 id="“Real_world”_example">“Real world” example</h2>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> camera = {isEnabled: <span class="literal">true</span>};</div><div class="line">camera = dotject(<span class="string">"settings.encoding.format,output.data.base64"</span>, camera, <span class="string">"JPEG"</span>, <span class="literal">true</span>);</div><div class="line"></div><div class="line">{</div><div class="line">  <span class="string">"isEnabled"</span>: <span class="literal">true</span>,</div><div class="line">  <span class="string">"settings"</span>: {</div><div class="line">    <span class="string">"encoding"</span>: {</div><div class="line">      <span class="string">"format"</span>: <span class="string">"JPEG"</span></div><div class="line">    }</div><div class="line">  },</div><div class="line">  <span class="string">"output"</span>: {</div><div class="line">    <span class="string">"data"</span>: {</div><div class="line">      <span class="string">"base64"</span>: <span class="literal">true</span></div><div class="line">    }</div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure>

<h2 id="Other_thoughts">Other thoughts</h2>
<p>I did consider not implementing the ability to extend existing objects, as this would provide cleaner usage and the base library (functional.js) does already have support for this with the <a href="https://github.com/leecrossley/functional-js#basic-%CE%BBassign-%CE%BBextend-example" target="_blank" rel="external">λ.assign</a> (λ.extend) function. I’d be interested to hear your feedback on this, as personally I’m almost always passing a new object, which seems silly.</p>
<h2 id="Issues_and_pull_requests">Issues and pull requests</h2>
<p>Please raise any issues / pull requests directly on <a href="https://github.com/leecrossley/dotject/issues" target="_blank" rel="external">github</a>.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/javascript/" term="javascript"/>
    <category scheme="http://ilee.co.uk/tags/web/" term="web"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[JSON5 Is Pointless and Unimaginative]]></title>
    <link href="http://ilee.co.uk/json5-is-pointless-and-unimaginative/"/>
    <id>http://ilee.co.uk/json5-is-pointless-and-unimaginative/</id>
    <published>2014-03-06T17:42:00.000Z</published>
    <updated>2014-03-06T18:32:23.000Z</updated>
    <content type="html"><![CDATA[<h2 id="JSON5">JSON5</h2>
<p>I get excited by new tech, especially when it’s JavaScript related. It usually makes me do a little dance.</p>
<p>The proposed extension to JSON, “<strong>JSON5</strong>“ unfortunately makes me die a little inside. My blog posts rarely adopt this tone, but I feel very strongly about this.</p>
<p>You can read more about JSON5 on the <a href="http://json5.org/" target="_blank" rel="external">official site</a> but I’m going to have a whinge about why it’s <strong>completely pointless and unimaginative poppycock</strong>.</p>
<h2 id="The_reason_behind_JSON5">The reason behind JSON5</h2>
<p>To quote the proposal:</p>
<blockquote>

<p>“JSON isn’t the friendliest to write and maintain by hand. Keys need to be quoted; objects and arrays can’t have trailing commas; comments aren’t supported.”</p>
<footer><strong>- aseemk</strong></footer></blockquote>


<p>From that you can deduce the following main proposed features:</p>
<ul>
<li>Inline comments</li>
<li>Trailing commas in arrays</li>
<li>Trailing commas for object properties</li>
</ul>
<h2 id="The_benefits">The benefits</h2>
<p><strong>There isn’t one. Not one.</strong> If anything, this is teaching bad programming techniques:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">    why: [</div><div class="line">        <span class="string">"is"</span>,</div><div class="line">        <span class="string">"this"</span>,</div><div class="line">        <span class="string">"better"</span>,</div><div class="line">    ],</div><div class="line">    <span class="comment">// (it isn't)</span></div><div class="line">}</div></pre></td></tr></table></figure>

<h3 id="Inline_comments">Inline comments</h3>
<p>Property names should be descriptive enough to be obvious without comments, otherwise what you’re doing is probably wrong.</p>
<p>Don’t say “we need to comment our config files”. If your config file requires explanation, do it in the documentation with examples, not inline in your JSON!</p>
<h3 id="Commas">Commas</h3>
<p>This isn’t me getting hung up on old Internet Explorer 6 and 7 parsing, there is simply no need for trailing commas on objects or arrays. Is it worthy of a new spec to add this as a <em>feature</em>?</p>
<h2 id="Conclusion">Conclusion</h2>
<p>If it isn’t broken, don’t try to fix it. The approach of the proposal appears to be “what <em>could</em> we add” and seems mainly be suited to less technical people who modify config files.</p>
<p>Of course, I’d love for you to challenge my views…</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/javascript/" term="javascript"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Sat Nav Map Directions for PhoneGap]]></title>
    <link href="http://ilee.co.uk/sat-nav-map-directions-for-phonegap/"/>
    <id>http://ilee.co.uk/sat-nav-map-directions-for-phonegap/</id>
    <published>2014-02-24T18:25:21.000Z</published>
    <updated>2014-02-24T19:39:37.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Maps_with_directions">Maps with directions</h2>
<p>Today I wrote a <a href="http://plugreg.com/plugin/leecrossley/cordova-plugin-directions" target="_blank" rel="external">Cordova “Directions” Plugin</a> to utilise native maps apps for “sat nav” style direction purposes (using latitude and longitude). You can view the source code <a href="https://github.com/leecrossley/cordova-plugin-directions" target="_blank" rel="external">here</a>.</p>
<h2 id="Install_the_plugin">Install the plugin</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cordova plugin add https://github.com/leecrossley/cordova-plugin-directions.git</div></pre></td></tr></table></figure>

<p>That’s all the installation steps thanks to Cordova’s fantastic CLI and streamlined plugin architecture. You <strong>do not</strong> need to reference any JavaScript, the build command will add a directions object to your root automatically.</p>
<h2 id="Get_directions">Get directions</h2>
<p>After the deviceready event has been fired, pass latitude and longitude to the <code>navigateTo</code> function:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">directions.navigateTo(<span class="string">"51.50722"</span>, <span class="string">"-0.12750"</span>); <span class="comment">// latitude, longitude</span></div></pre></td></tr></table></figure>

<p>That’s it! Really, it’s that simple. The Google maps app will open on Android and give directions from the device’s current location. Similarly, Bing maps will open on Windows Phone 8.</p>
<h2 id="Platforms">Platforms</h2>
<p>I only needed support for Android and Windows Phone 8, it would be easy to add support for iOS too if anyone needs it. As usual, issues and pull requests on <a href="https://github.com/leecrossley/cordova-plugin-directions" target="_blank" rel="external">GitHub</a>.</p>
<p>Note: <em>I managed to write this entire post without making any one direction jokes.</em></p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/phonegap/" term="phonegap"/>
    <category scheme="http://ilee.co.uk/tags/android/" term="android"/>
    <category scheme="http://ilee.co.uk/tags/wp8/" term="wp8"/>
    <category scheme="http://ilee.co.uk/tags/javascript/" term="javascript"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Are You a Dot Guru?]]></title>
    <link href="http://ilee.co.uk/are-you-a-dot-guru/"/>
    <id>http://ilee.co.uk/are-you-a-dot-guru/</id>
    <published>2014-02-06T19:20:06.000Z</published>
    <updated>2014-02-08T08:44:22.000Z</updated>
    <content type="html"><![CDATA[<h2 id="The_-guru_top_level_domain">The .guru top level domain</h2>
<p>The “.guru” top level domain (TLD) became available for public registration this week. More than 20,000 .guru domain names have already been snapped up, proving it to be the most popular of the new public TLDs.</p>
<p><img src="/img/guru.png" alt="dot guru"></p>
<h3 id="Going,_going…">Going, going…</h3>
<p>Are you considered an expert in a particular field, product or category? If you are a guru, there might still be time to register your .guru domain name.</p>
<blockquote>

<p><strong>Take a quick search on <a href="http://www.shareasale.com/r.cfm?B=210738&amp;U=912360&amp;M=25581&amp;urllink=https://iwantmyname.com/domains/dot-guru" target="_blank" rel="external">iwantmyname</a> to see what’s available.</strong></p>
</blockquote>


<h2 id="I’m_a_dot_guru">I’m a dot guru</h2>
<p>I quickly registered a couple of .guru domain names. I plan to utilise them as opposed to selling them, although someone has listed 3dprinting.guru for $7500 and mine are better than that.. so we’ll see.</p>
<p>There are also others listed for silly prices (and unlikely to sell?), I’ve seen one on ebay for $20K (or best offer, admittedly).</p>
<h2 id="Trademarks">Trademarks</h2>
<p>As you’d expect, most companies have registered their trademarks as domains (e.g. Apple have registered iphone.guru and pretty much all their products). There are however some registrations that do not belong to the trademark holders :) … <em>opens popcorn</em></p>
<h2 id="Other_TLDs">Other TLDs</h2>
<p>Other popular TLDs now available include:</p>
<ul>
<li>.bike</li>
<li>.clothing</li>
<li>.singles</li>
<li>.ventures</li>
<li>.plumbing</li>
<li>.holdings</li>
<li>.equipment</li>
<li>.lighting</li>
<li>.estate</li>
<li>.graphics</li>
<li>.camera</li>
<li>.gallery</li>
</ul>
<p>Note that .guru is more popular than all of the above put together.</p>
<h2 id="Is_this_the_end_of_-com?">Is this the end of .com?</h2>
<p><a href="http://www.youtube.com/watch?v=kxRX6LXDpWs" target="_blank" rel="external">No</a>. To put things into perspective, there have been more than <strong>five times as many</strong> .com registrations than .guru registrations since Wednesday.</p>
<p>Even skype and twitter (at the time of writing this) aren’t picking up that domain.guru is a URL, even with a protocol prefix!</p>
<p>The .com TLD isn’t going anywhere. Past new TLDs such as .co didn’t replace the .com and neither will any of the proposed future new TLDs. </p>
<p>The new TLDs do have their place and are needed in the overcrowded .com world.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/web/" term="web"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Debugging WP8 in PhoneGap]]></title>
    <link href="http://ilee.co.uk/debugging-wp8-in-phonegap/"/>
    <id>http://ilee.co.uk/debugging-wp8-in-phonegap/</id>
    <published>2014-01-31T18:00:30.000Z</published>
    <updated>2014-01-31T18:27:40.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Windows_Phone_8">Windows Phone 8</h2>
<p>Developing or porting a Cordova / PhoneGap app to WP8 can be particularly tricky. There are lots of gotchas, which are usually difficult to identify without experience. Today I <a href="https://issues.apache.org/jira/browse/CB-5957" target="_blank" rel="external">reported an issue</a> that prevents the WP8 platform from even being used with the latest <em>stable</em> version of Cordova. It really does get less attention that iOS and Android.</p>
<p>One of the main issues making the platform difficult to develop for is the inability to easily see errors as they occur using the default setup. In contrast, on the Android platform, you’re able to get an extremely verbose output of <em>everything</em> using logcat.</p>
<h2 id="Show_me_the_errors">Show me the errors</h2>
<p>I discovered a neat trick over 8 months ago when I was developing a WP8 app in anger. Simply place this code in your app (so that it is executed before any potential errors):</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.onerror = <span class="function"><span class="keyword">function</span> <span class="params">(message, file, line)</span> </span>{</div><div class="line">    <span class="built_in">window</span>.external.Notify(<span class="string">"Error in Application: "</span> +</div><div class="line">        message + <span class="string">". Source File: "</span> + file + <span class="string">", Line: "</span> + line);</div><div class="line">}</div></pre></td></tr></table></figure>

<p>This code allows you to not only see any thrown errors in the Visual Studio output window, but also the error message itself and the file / line number of the offending code! A bit better than splurging <code>console.log</code>s everywhere :)</p>
<p>You can see the original gist I wrote <a href="https://gist.github.com/leecrossley/5668675" target="_blank" rel="external">here</a>.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/phonegap/" term="phonegap"/>
    <category scheme="http://ilee.co.uk/tags/wp8/" term="wp8"/>
    <category scheme="http://ilee.co.uk/tags/javascript/" term="javascript"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[New Features in grunt-timer v0.3]]></title>
    <link href="http://ilee.co.uk/new-features-in-grunt-timer-v03/"/>
    <id>http://ilee.co.uk/new-features-in-grunt-timer-v03/</id>
    <published>2014-01-19T10:59:01.000Z</published>
    <updated>2014-01-19T11:33:55.000Z</updated>
    <content type="html"><![CDATA[<h2 id="New_features_of_“grunt-timer”">New features of “grunt-timer”</h2>
<p>I’m pleased to announce the v0.3 release of <a href="https://npmjs.org/package/grunt-timer" target="_blank" rel="external">grunt-timer</a>! The best part about this release is that it’s entirely down to the efforts of the open source community.</p>
<h2 id="What’s_new">What’s new</h2>
<p>There are 3 new features, implemented as interchangeable options:</p>
<h3 id="friendlyTime">friendlyTime</h3>
<p>Initialising grunt-timer with this option outputs durations in a friendly hours/minutes/seconds format (as opposed to just milliseconds, which is the default). e.g:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> <span class="params">(grunt)</span> </span>{</div><div class="line">    timer.init(grunt, { friendlyTime: <span class="literal">true</span> });</div></pre></td></tr></table></figure>

<h3 id="deferLogs">deferLogs</h3>
<p>Initialising grunt-timer with this option outputs a summary of all task timings at the end of the grunt process (as opposed to between tasks, which is the default). e.g:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> <span class="params">(grunt)</span> </span>{</div><div class="line">    timer.init(grunt, { deferLogs: <span class="literal">true</span> });</div></pre></td></tr></table></figure>

<p><em>deferLogs</em> can be used in conjunction with <em>friendlyTime</em>.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> <span class="params">(grunt)</span> </span>{</div><div class="line">    timer.init(grunt, { friendlyTime: <span class="literal">true</span>, deferLogs: <span class="literal">true</span> });</div></pre></td></tr></table></figure>

<h3 id="totalOnly">totalOnly</h3>
<p>Initialising grunt-timer with this option only the total time all tasks took to complete. This is useful for having many small, insignificant tasks that would generate considerable output even with deferLogs. e.g:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> <span class="params">(grunt)</span> </span>{</div><div class="line">    timer.init(grunt, { totalOnly: <span class="literal">true</span> });</div></pre></td></tr></table></figure>

<p><em>totalOnly</em> can be used in conjunction with <em>friendlyTime</em>.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> <span class="params">(grunt)</span> </span>{</div><div class="line">    timer.init(grunt, { friendlyTime: <span class="literal">true</span>, totalOnly: <span class="literal">true</span> });</div></pre></td></tr></table></figure>

<h2 id="Credits">Credits</h2>
<h3 id="Contributors">Contributors</h3>
<ul>
<li>Thanks to <a href="https://github.com/geekdave" target="_blank" rel="external">Dave Cadwallader</a> for the implementation of the <em>friendlyTime</em> and <em>deferLogs</em> options.</li>
<li>Thanks to <a href="https://github.com/carlherbst" target="_blank" rel="external">Carl Herbst</a> for the implementation of the <em>totalOnly</em> option.</li>
</ul>
<h2 id="Pull_requests">Pull requests</h2>
<p>The full source code is available <a href="https://github.com/leecrossley/grunt-timer" target="_blank" rel="external">here</a> and you can create pull requests <a href="https://github.com/leecrossley/grunt-timer/pulls" target="_blank" rel="external">here</a>.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/javascript/" term="javascript"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Ditch the www Subdomain]]></title>
    <link href="http://ilee.co.uk/ditch-the-www-subdomain/"/>
    <id>http://ilee.co.uk/ditch-the-www-subdomain/</id>
    <published>2014-01-08T09:15:23.000Z</published>
    <updated>2014-01-08T09:56:44.000Z</updated>
    <content type="html"><![CDATA[<h2 id="It’s_time">It’s time</h2>
<p>We’re in the year 2014, people know what the world wide web is (and have known for quite some time), yet may organisations still insist on using a www subdomain for their primary website instead of a pretty <em>subdomain-less</em> url.</p>
<h2 id="Keep_it_simple">Keep it simple</h2>
<p>I don’t use, link to, or promote the url <code>www.ilee.co.uk</code> - I always use <code>ilee.co.uk</code>. It’s prettier, simpler and still obviously a url.</p>
<h2 id="Use_a_permanent_(301)_redirect">Use a permanent (301) redirect</h2>
<p>I do redirect <code>www.ilee.co.uk</code> to <code>ilee.co.uk</code>, for completeness and SEO reasons. Serving the same content for each url could be considered duplicate content without a redirect. GitHub pages automatically handles this and it’s GitHub’s preferred format (you’ll never see <code>www.github.com</code>, it’s always <code>github.com</code>).</p>
<h3 id="Expressjs">Expressjs</h3>
<p>To my horror I realised yesterday that <code>www.plugreg.com</code>, didn’t redirect to <code>plugreg.com</code>. plugreg is written in node.js and uses the expressjs framework, so I wrote a handy little function to handle the www redirect scenario:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> redirect = <span class="function"><span class="keyword">function</span> <span class="params">(req, res, next)</span> </span>{</div><div class="line">    <span class="keyword">var</span> baseUrl = req.protocol + <span class="string">"://"</span> + req.host,</div><div class="line">        wwwUrl = req.protocol + <span class="string">"://www."</span>;</div><div class="line">    <span class="keyword">if</span> (baseUrl.substring(<span class="number">0</span>, wwwUrl.length) === wwwUrl) {</div><div class="line">        res.redirect(<span class="number">301</span>, baseUrl.replace(<span class="string">"://www."</span>, <span class="string">"://"</span>) + req.url);</div><div class="line">    } <span class="keyword">else</span> {</div><div class="line">        next();</div><div class="line">    }</div><div class="line">};</div><div class="line"></div><div class="line">app.all(<span class="string">"*"</span>, redirect);</div></pre></td></tr></table></figure>

<h2 id="Configure_webmaster_tools">Configure webmaster tools</h2>
<p>Under “site settings” of <a href="https://www.google.com/webmasters/tools/" target="_blank" rel="external">Google Webmaster Tools</a>, you also have the option to set your <em>preferred domain</em>:</p>
<ul>
<li>Don’t set a preferred domain</li>
<li>Display URLs as www.ilee.co.uk</li>
<li>Display URLs as ilee.co.uk</li>
</ul>
<p><strong>Here’s to a www-less 2014</strong>.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/app/" term="app"/>
    <category scheme="http://ilee.co.uk/tags/web/" term="web"/>
    <category scheme="http://ilee.co.uk/tags/javascript/" term="javascript"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Mobile UX to Impact SEO]]></title>
    <link href="http://ilee.co.uk/mobile-ux-to-impact-seo/"/>
    <id>http://ilee.co.uk/mobile-ux-to-impact-seo/</id>
    <published>2014-01-03T08:25:40.000Z</published>
    <updated>2014-01-03T09:29:16.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Optimise_for_mobile">Optimise for mobile</h2>
<p>With huge numbers of internet users using mobiles and tablet devices to browse the web, it’s more important than ever to optimise your website for these devices.</p>
<h3 id="Creating_a_mobile_website_is_not_enough">Creating a mobile website is not enough</h3>
<p>If you truly want to engage users on mobile devices, you’ve got to consider <em>their experience</em>, not just how the website looks. Touch interfaces, varying resolutions / density and gestures are among just a few of the challenges technology advancements have brought.</p>
<h2 id="What_exactly_is_UX?">What exactly is <em>UX</em>?</h2>
<p>UX stands for <strong>U</strong>ser e<strong>X</strong>perience, which is the comprehensive experience of a user interacting with a product (in this case a website and more specifically, a website on mobile devices). It encompasses factors such as ease-of-use and user gratification.</p>
<h3 id="UX_is_hard">UX is hard</h3>
<p>There’s no completely right answer but there are <em>better answers</em>. Google are starting to analyse the mobile user experience of websites using some set tangible metrics, so this is a good quantifiable place to start.</p>
<h2 id="Why_UX?">Why UX?</h2>
<p>It’s all about the users and they are ultimately going to result in conversions (if that’s your aim) usually through improved productivity or satisfaction though a good user experience. Although Google looks to start weighting search results based on their perceived automated user experience, the focus should still be primarily on real users. After all, web traffic on its own means nothing.</p>
<h2 id="PageSpeed_insights">PageSpeed insights</h2>
<p>The <a href="https://developers.google.com/speed/pagespeed/insights" target="_blank" rel="external">PageSpeed Insights</a> tool is now reporting mobile user experience, in addition to page speed. This is a great place to start to give you instant feedback on some tangible metrics. The tool currently analyses:</p>
<ul>
<li>Use of plugins</li>
<li>Viewport metatag and content size within the viewport</li>
<li>Size of touch/tap “clickable” interactions</li>
<li>Font sizes</li>
</ul>
<p>The website provides more info on these. This blog passed all of the user experience first time, except for the sizing of anchor tags. To fix this, I added the following css to my article (content) section: </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="at_rule">@<span class="keyword">media</span> screen and (max-width: <span class="number">600px</span>) </span>{</div><div class="line">  <span class="tag">article</span> <span class="tag">a</span> <span class="rules">{</span></div><div class="line">    <span class="rule"><span class="attribute">display</span>:<span class="value"> inline-block</span></span>;</div><div class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">3px</span> <span class="number">7px</span></span></span>;</div><div class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#ecf0f1</span></span></span>;</div><div class="line">    <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">5px</span> <span class="number">0px</span></span></span>;</div><div class="line">  <span class="rule">}</span></div><div class="line">}</div></pre></td></tr></table></figure>

<h2 id="That’s_not_the_end">That’s not the end</h2>
<p>The PageSpeed Insights are a great place to start for existing mobile websites, but it’s not the end of the road, there are many other considerations (every UX designer and every website will have their own particulars). Consider <a href="http://en.wikipedia.org/wiki/A/B_testing" target="_blank" rel="external">split A/B testing</a> and responding to user feedback too.</p>
<p>If you have the luxury of a starting your mobile website from scratch or a rewrite, consider user experience right from the outset and get users involved in the process as early as possible.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/iphone/" term="iphone"/>
    <category scheme="http://ilee.co.uk/tags/web/" term="web"/>
    <category scheme="http://ilee.co.uk/tags/html/" term="html"/>
    <category scheme="http://ilee.co.uk/tags/javascript/" term="javascript"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Learn nodejs in 2014]]></title>
    <link href="http://ilee.co.uk/learn-nodejs-in-2014/"/>
    <id>http://ilee.co.uk/learn-nodejs-in-2014/</id>
    <published>2014-01-02T09:41:26.000Z</published>
    <updated>2014-01-02T10:13:51.000Z</updated>
    <content type="html"><![CDATA[<h2 id="The_year_of_the_node">The year of the node</h2>
<p>If you haven’t already (shame on you), it really is time to sit down and have a play with <a href="http://nodejs.org/" target="_blank" rel="external">node.js</a>. So that you have absolutely no excuses, I’ve put together a super quick start guide to kick you off.</p>
<p>Nodejs was first released back in May 2009 but has gathered huge momentum over the past year or so.</p>
<h2 id="Super_quick_start">Super quick start</h2>
<h3 id="Install">Install</h3>
<p><a href="http://nodejs.org/download/" target="_blank" rel="external">Download</a> the installer for your OS and install.</p>
<h3 id="Create">Create</h3>
<p>Create a new directory for your app (optional) and a blank <code>app.js</code> JavaScript file.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ mkdir nodeapp</div><div class="line">$ <span class="built_in">cd</span> nodeapp</div><div class="line">$ touch app.js</div></pre></td></tr></table></figure>

<h3 id="Code">Code</h3>
<p>In your newly created JavaScript file, add the following code:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">"http"</span>);</div><div class="line"></div><div class="line">http.createServer(<span class="function"><span class="keyword">function</span><span class="params">(req, res)</span> </span>{</div><div class="line">    res.writeHead(<span class="number">200</span>, {<span class="string">"Content-Type"</span>: <span class="string">"text/html"</span>});</div><div class="line">    res.end(<span class="string">"I know node.js!"</span>);</div><div class="line">}).listen(<span class="number">4000</span>);</div></pre></td></tr></table></figure>

<h3 id="Run">Run</h3>
<p>Ensure you’re in the directory of your <code>app.js</code> JavaScript file and run:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ node app</div></pre></td></tr></table></figure>

<p>Now visit <code>http://localhost:4000/</code> to see your newly created node.js http server in action!</p>
<h2 id="Packages">Packages</h2>
<p>You’ll notice in the example above that we’re using <code>http</code>, which is part of the node core. There are over 50,000 3rd party packages available on the <a href="https://npmjs.org/" target="_blank" rel="external">node package manager registry</a>, that should keep you busy for the rest of the year :)</p>
<p>Happy new year!</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/javascript/" term="javascript"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Using npm in Europe]]></title>
    <link href="http://ilee.co.uk/using-npm-in-europe/"/>
    <id>http://ilee.co.uk/using-npm-in-europe/</id>
    <published>2013-12-20T07:37:13.000Z</published>
    <updated>2013-12-20T08:12:23.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Protip">Protip</h2>
<p>I wrote a short <a href="https://coderwall.com/p/iihlxa" target="_blank" rel="external">protip</a> this morning about the European mirror for npm. Developers in Europe (such as myself, based in Manchester, UK), will find this Germany based mirror significantly faster and possibly more reliable.</p>
<p>You can force the use of the European mirror by simply appending the <code>--registry http://registry.npmjs.eu</code> flag to the end of your command, however, I recommend you just set up an alias, e.g:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ alias enpm=<span class="string">"npm --registry http://registry.npmjs.eu"</span></div></pre></td></tr></table></figure>

<h2 id="How_much_faster?">How much faster?</h2>
<p>Rather than just claim <em>it is faster</em>, I want to take this blog post further and prove that it’s faster.</p>
<h3 id="Quick_test">Quick test</h3>
<p>Let’s pick a package with a few dependencies, <code>grunt</code>.</p>
<p>First, let’s run <code>npm cache clean</code> to remove any data in the npm cache folder. Without supplying a path, this clears the entire cache. A quick run of <code>npm cache ls</code> confirms this.</p>
<h3 id="Timing">Timing</h3>
<p>How do we actually go about timing an <code>npm install</code>? Well, there’s a basic command called <code>time</code> that’s built into most shells and allows us to easily see the execution time of a command (both “real time” used and system time). This is accurate enough for what we need.</p>
<p>Let’s give it a go:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ time npm install grunt</div><div class="line"><span class="comment"># =4.71s user 1.69s system 29% cpu 21.573 total</span></div></pre></td></tr></table></figure>

<p>Now let’s clear the cache again and try the European mirror:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ time npm install grunt --registry http://registry.npmjs.eu</div><div class="line"><span class="comment"># =3.75s user 1.48s system 44% cpu 11.799 total</span></div></pre></td></tr></table></figure>

<p>21.573s vs 11.799s means it’s almost <em>twice as fast</em> for me to use the European mirror of the npm registry.</p>
<p>Damn, now I don’t have long enough to make a coffee.</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/javascript/" term="javascript"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[List Node Packages w/o Dependencies]]></title>
    <link href="http://ilee.co.uk/list-node-packages-wo-dependencies/"/>
    <id>http://ilee.co.uk/list-node-packages-wo-dependencies/</id>
    <published>2013-12-18T13:18:02.000Z</published>
    <updated>2013-12-18T14:11:27.000Z</updated>
    <content type="html"><![CDATA[<h2 id="npm_list">npm list</h2>
<p><code>npm list</code> (or <code>npm ls</code> which is my preferred shorthand) is a useful way to determine what npm packages are currently installed. The issue is, you get all their dependencies too (and their dependencies dependencies and their dependencies dependencies dependencies…). A bit frustrating, since this list is usually exceptionally long and no amount of nesting formatting can fully combat this.</p>
<h3 id="Added_depth">Added depth</h3>
<p>Turns out there’s an easy way to combat this, although it’s not in the <a href="https://npmjs.org/doc/cli/npm-ls.html" target="_blank" rel="external">documentation for npm ls</a>.</p>
<p>By adding <code>--depth=0</code> to the end of the command, it only draws out the top of the dependency tree. Happy days:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm ls --depth=<span class="number">0</span></div></pre></td></tr></table></figure>

<h3 id="Go_global">Go global</h3>
<p>This even works for globally installed packages too, by adding the standard <code>-g</code> flag.</p>
<h2 id="I’m_getting_errors!">I’m getting errors!</h2>
<p>When I first tried this, I ended up with a bunch of nonsensical errors (e.g. “npm ERR! max depth reached” among others), although there was nothing really wrong.</p>
<p>You can combat this by adding <code>&quot;$@&quot; 2&gt;/dev/null</code> to the end. This essentially ignores the pointless errors by redirecting them to /dev/null. <em>Nothing to see here, move along</em> :)</p>
<h2 id="The_complete_command">The complete command</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm ls --depth=<span class="number">0</span> <span class="string">"<span class="variable">$@</span>"</span> <span class="number">2</span>&gt;/dev/null</div></pre></td></tr></table></figure>

<p>If you don’t want to type this out all the time (I certainly don’t), you can alias it up:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ alias npmls=<span class="string">"npm ls --depth=0 "</span><span class="variable">$@</span><span class="string">" 2&gt;/dev/null"</span></div></pre></td></tr></table></figure>

<p>Then usage is as simple as:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npmls</div></pre></td></tr></table></figure>

]]></content>
    <category scheme="http://ilee.co.uk/tags/javascript/" term="javascript"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Native Page Transitions with PhoneGap]]></title>
    <link href="http://ilee.co.uk/native-page-transitions-with-phonegap/"/>
    <id>http://ilee.co.uk/native-page-transitions-with-phonegap/</id>
    <published>2013-12-16T07:11:57.000Z</published>
    <updated>2013-12-19T09:37:47.000Z</updated>
    <content type="html"><![CDATA[<p>I was too busy to write any blog posts last week, but this more than makes up for it…</p>
<h2 id="Stop_the_press!">Stop the press!</h2>
<p>Having spent copious amounts of time emulating native iOS page transitions with JavaScript, HTML5 and CSS3 in the past, everything is about to change.</p>
<p>My new Cordova / PhoneGap plugin allows you to use the real native iOS transitions without ever leaving your web view!</p>
<p><strong>I’ve turned page transitions around</strong> (poor pun, I know).</p>
<p><img src="/img/transition.png" alt="Page transition"></p>
<h2 id="Video_demo">Video demo</h2>
<p>This is so good, for the first time on my blog, it demands a <a href="https://vimeo.com/81980283" target="_blank" rel="external">video demo</a>. Yes, that really is a Cordova web view with a single HTML page.</p>
<h2 id="Down_to_business">Down to business</h2>
<p>If you’re a Cordova / PhoneGap developer, I’m sure you’re already desperate to get started, so I’ll cut to the chase.</p>
<h3 id="Install">Install</h3>
<p>The source code is available on <a href="https://github.com/leecrossley/cordova-plugin-native-transitions" target="_blank" rel="external">Github</a>.</p>
<p>Assuming you’re using Cordova 3.x and the CLI, installation is as simple as using the <code>cordova plugin add</code> command:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cordova plugin add https://github.com/leecrossley/cordova-plugin-native-transitions.git</div></pre></td></tr></table></figure>

<p>You <strong>do not</strong> need to reference any JavaScript, the Cordova plugin architecture will add a <code>nativetransitions</code> object to your root automatically when you build.</p>
<h2 id="Transitions">Transitions</h2>
<h3 id="Flip">Flip</h3>
<p>Flip page transition, with support for flipping left or right:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> duration = <span class="number">0.5</span>, <span class="comment">// animation time in seconds</span></div><div class="line">    direction = <span class="string">"right"</span>; <span class="comment">// animation direction - left || right</span></div><div class="line">nativetransitions.flip(duration, direction, onComplete);</div></pre></td></tr></table></figure>

<h3 id="Curl">Curl</h3>
<p>Curl page transition, with support for flipping curling up or down:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> duration = <span class="number">0.5</span>, <span class="comment">// animation time in seconds</span></div><div class="line">    direction = <span class="string">"down"</span>; <span class="comment">// animation direction - up || down</span></div><div class="line">nativetransitions.curl(duration, direction, onComplete);</div></pre></td></tr></table></figure>

<h3 id="Fade">Fade</h3>
<p>A simple fade page transition:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> duration = <span class="number">0.5</span>; <span class="comment">// animation time in seconds</span></div><div class="line">nativetransitions.fade(duration, onComplete);</div></pre></td></tr></table></figure>

<h2 id="Example">Example</h2>
<p>Here’s an example of how I suggest you use the plugin in your code, so that you get a realistic transition:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">setTimeout(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>{</div><div class="line">    <span class="comment">// Change your html here</span></div><div class="line">}, <span class="number">50</span>);</div><div class="line">nativetransitions.flip(duration, direction);</div></pre></td></tr></table></figure>

<h2 id="More_transitions?">More transitions?</h2>
<p>If you’d like to add more transitions (possibly custom transitions of your own) please pull request. If you’d like something in particular, let me know and I’ll see if I can implement it for you.</p>
<p><strong>This is pretty flippin’ amazing stuff</strong> (OK, I’ll stop now).</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/phonegap/" term="phonegap"/>
    <category scheme="http://ilee.co.uk/tags/iphone/" term="iphone"/>
    <category scheme="http://ilee.co.uk/tags/javascript/" term="javascript"/>
    <category scheme="http://ilee.co.uk/tags/html/" term="html"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Looping Audio with PhoneGap]]></title>
    <link href="http://ilee.co.uk/looping-audio-with-phonegap/"/>
    <id>http://ilee.co.uk/looping-audio-with-phonegap/</id>
    <published>2013-12-06T10:05:49.000Z</published>
    <updated>2013-12-06T10:47:47.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Playing_media_on_repeat">Playing media on repeat</h2>
<p>Playing media is easy with Phonegap / Cordova using the core <a href="http://www.plugreg.com/plugin/apache/cordova-plugin-media" target="_blank" rel="external">media plugin</a>. I’m using it in the game I’m writing.</p>
<p>The issue is, I wanted to be able to play a background music loop on repeat (don’t worry, the user can switch this off in my apps settings, or simply <a href="/phonegap-plays-sound-on-mute/">mute the sound</a>).</p>
<h3 id="iOS">iOS</h3>
<p>There’s an “iOS Quirk” that makes this really easy for iOS devices. From the documentation:</p>
<blockquote>“<strong>numberOfLoops</strong>: Pass this option to the play method to specify the number of times you want the media file to play”</blockquote>

<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> myMedia = <span class="keyword">new</span> Media(<span class="string">"/audio/my.mp3"</span>);</div><div class="line">myMedia.play({ numberOfLoops: <span class="number">2</span> });</div></pre></td></tr></table></figure>

<p>It’s a bit frustrating that you can’t do <code>numberOfLoops: -1</code> to repeat indefinitely, but I can live with it. The issue is, you can’t do this on Android.</p>
<h3 id="Android">Android</h3>
<p>Here’s my work around (that I also for iOS too to keep the JavaScript consistent). It’s really frustrating because this could easily be built into the plugin’s native component.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> myMedia;</div><div class="line"></div><div class="line"><span class="keyword">var</span> loop = <span class="function"><span class="keyword">function</span> <span class="params">(status)</span> </span>{</div><div class="line">    <span class="keyword">if</span> (status === Media.MEDIA_STOPPED) {</div><div class="line">        myMedia.play();</div><div class="line">    }</div><div class="line">};</div><div class="line"></div><div class="line">myMedia = <span class="keyword">new</span> Media(<span class="string">"/audio/my.mp3"</span>, <span class="literal">null</span>, <span class="literal">null</span>, loop);</div><div class="line">myMedia.play();</div></pre></td></tr></table></figure>

<p>I’m using the <code>mediaStatus</code> callback that executes when the media status changes, to check to see if the media has stopped playing (it’s finished) and to play the media again.</p>
<p>Can we have a <code>repeat: true</code> please?</p>
]]></content>
    <category scheme="http://ilee.co.uk/tags/phonegap/" term="phonegap"/>
    <category scheme="http://ilee.co.uk/tags/iphone/" term="iphone"/>
    <category scheme="http://ilee.co.uk/tags/android/" term="android"/>
    <category scheme="http://ilee.co.uk/tags/javascript/" term="javascript"/>
  </entry>
</feed>
